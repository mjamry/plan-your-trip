{"ast":null,"code":"import _toConsumableArray from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\src\\\\State\\\\LocationsState.js\";\nimport React, { useReducer, useContext, createContext } from 'react';\nimport store from 'store';\nimport useLoggerService from '../Services/Diagnostics/LoggerService';\nimport { LocationsListsActions } from './LocationsListsState';\nvar EmptyState = {\n  locations: [],\n  locationSelectedOnMap: null,\n  isLoading: false,\n  selectedLocationsListId: 2\n};\nvar LocationsStateActions = {\n  addLocation: 'addLocation',\n  removeLocation: 'removeLocation',\n  editLocation: 'editLocation',\n  selectOnMap: 'selectOnMap',\n  removeAllLocations: 'removeAllLocations',\n  loadLocations: 'loadLocations',\n  isLoading: 'isLoading',\n  selectLocationsList: 'selectLocationsList'\n};\nvar LocationsStateContext = createContext();\n\nvar LocationsStateProvider = function LocationsStateProvider(_ref) {\n  var children = _ref.children,\n      reducerHook = _ref.reducerHook;\n  var value = reducerHook || useReducer(_defaultReducer, EmptyState);\n  return React.createElement(LocationsStateContext.Provider, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, children);\n};\n\nvar useLocationsState = function useLocationsState() {\n  return useContext(LocationsStateContext);\n};\n\nvar _storeLocations = function _storeLocations(state) {\n  store.set('locationsState', state);\n};\n\nvar _restoreLocations = function _restoreLocations() {\n  return store.get('locationsState', EmptyState);\n};\n\nvar _defaultReducer = function _defaultReducer(state, action) {\n  var newState = {};\n  var logger = useLoggerService();\n\n  switch (action.type) {\n    case LocationsStateActions.addLocation:\n      newState = _objectSpread({}, state, {\n        locations: [].concat(_toConsumableArray(state.locations), [action.data])\n      });\n      break;\n\n    case LocationsStateActions.removeLocation:\n      var updatedLocations = state.locations.filter(function (l) {\n        return l.id !== action.data.id;\n      }) || [];\n      newState = _objectSpread({}, state, {\n        locations: updatedLocations\n      });\n      break;\n\n    case LocationsStateActions.editLocation:\n      var editedItemIndex = state.locations.findIndex(function (l) {\n        return l.id === action.data.id;\n      });\n      state.locations[editedItemIndex] = action.data;\n      newState = _objectSpread({}, state, {\n        locations: _toConsumableArray(state.locations)\n      });\n      break;\n\n    case LocationsStateActions.selectOnMap:\n      newState = _objectSpread({}, state, {\n        locationSelectedOnMap: action.data\n      });\n      break;\n\n    case LocationsStateActions.removeAllLocations:\n      newState = _objectSpread({}, state, {\n        locations: []\n      });\n      break;\n\n    case LocationsStateActions.loadLocations:\n      newState = _objectSpread({}, state, {\n        locations: action.data\n      });\n      break;\n\n    case LocationsStateActions.isLoading:\n      newState = _objectSpread({}, state, {\n        isLoading: action.data\n      });\n      break;\n\n    case LocationsListsActions.selectLocationsList:\n      newState = _objectSpread({}, state, {\n        selectedLocationsListId: action.data\n      });\n      break;\n\n    default:\n      newState = state;\n      logger.debug(\"[LocationsStatus] Action: \\\"\".concat(action.type, \"\\\" was not defined.\"));\n  } //_storeLocations(newState);\n\n\n  return newState;\n};\n\nexport { EmptyState, LocationsStateActions, LocationsStateContext, LocationsStateProvider, useLocationsState, _defaultReducer };","map":{"version":3,"sources":["E:/priv/github/plan-your-trip/src/State/LocationsState.js"],"names":["React","useReducer","useContext","createContext","store","useLoggerService","LocationsListsActions","EmptyState","locations","locationSelectedOnMap","isLoading","selectedLocationsListId","LocationsStateActions","addLocation","removeLocation","editLocation","selectOnMap","removeAllLocations","loadLocations","selectLocationsList","LocationsStateContext","LocationsStateProvider","children","reducerHook","value","_defaultReducer","useLocationsState","_storeLocations","state","set","_restoreLocations","get","action","newState","logger","type","data","updatedLocations","filter","l","id","editedItemIndex","findIndex","debug"],"mappings":"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","sourcesContent":["import React, { useReducer, useContext, createContext } from 'react';\r\nimport store from 'store'\r\nimport useLoggerService from '../Services/Diagnostics/LoggerService'\r\nimport { LocationsListsActions } from './LocationsListsState';\r\n\r\nconst EmptyState = {\r\n    locations: [],\r\n    locationSelectedOnMap: null,\r\n    isLoading: false,\r\n    selectedLocationsListId: 2\r\n}\r\n\r\nconst LocationsStateActions = {\r\n    addLocation: 'addLocation',\r\n    removeLocation: 'removeLocation',\r\n    editLocation: 'editLocation',\r\n    selectOnMap: 'selectOnMap',\r\n    removeAllLocations: 'removeAllLocations',\r\n    loadLocations: 'loadLocations',\r\n    isLoading: 'isLoading',\r\n    selectLocationsList: 'selectLocationsList'\r\n}\r\n\r\nconst LocationsStateContext = createContext();\r\n\r\nconst LocationsStateProvider = ({ children, reducerHook }) => {\r\n    const value = reducerHook || useReducer(_defaultReducer, EmptyState);\r\n    return (\r\n        <LocationsStateContext.Provider value={value}>\r\n            {children}\r\n        </LocationsStateContext.Provider>\r\n    )\r\n}\r\n\r\nvar useLocationsState = () => useContext(LocationsStateContext);\r\n\r\nvar _storeLocations = (state) => {\r\n    store.set('locationsState', state);\r\n}\r\n\r\nvar _restoreLocations = () => {\r\n    return store.get('locationsState', EmptyState);\r\n}\r\n\r\nvar _defaultReducer = (state, action) => {\r\n    var newState = {};\r\n    var logger = useLoggerService();\r\n\r\n    switch (action.type) {\r\n        case LocationsStateActions.addLocation:\r\n            newState = { ...state, locations: [...state.locations, action.data] };\r\n            break;\r\n        case LocationsStateActions.removeLocation:\r\n            var updatedLocations = state.locations.filter(l => l.id !== action.data.id) || [];\r\n            newState = { ...state, locations: updatedLocations };\r\n            break;\r\n        case LocationsStateActions.editLocation:\r\n            var editedItemIndex = state.locations.findIndex(l => l.id === action.data.id);\r\n            state.locations[editedItemIndex] = action.data;\r\n            newState = { ...state, locations: [...state.locations] };\r\n            break;\r\n        case LocationsStateActions.selectOnMap:\r\n            newState = { ...state, locationSelectedOnMap: action.data };\r\n            break;\r\n        case LocationsStateActions.removeAllLocations:\r\n            newState = { ...state, locations: [] };\r\n            break;\r\n        case LocationsStateActions.loadLocations:\r\n            newState = { ...state, locations: action.data };\r\n            break;\r\n        case LocationsStateActions.isLoading:\r\n            newState = { ...state, isLoading: action.data };\r\n            break;\r\n        case LocationsListsActions.selectLocationsList:\r\n            newState = {...state, selectedLocationsListId: action.data}\r\n            break;\r\n        default:\r\n            newState = state;\r\n            logger.debug(`[LocationsStatus] Action: \"${action.type}\" was not defined.`);\r\n    }\r\n\r\n    //_storeLocations(newState);\r\n    return newState;\r\n}\r\n\r\nexport { EmptyState, LocationsStateActions, LocationsStateContext, LocationsStateProvider, useLocationsState, _defaultReducer }"]},"metadata":{},"sourceType":"module"}