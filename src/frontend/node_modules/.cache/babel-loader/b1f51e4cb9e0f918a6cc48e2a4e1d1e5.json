{"ast":null,"code":"import _slicedToArray from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\src\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\src\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\src\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport wiki from 'wikijs';\nimport locationDto from '../components/Locations/LocationDto';\nimport LanguageProvider from '../Common/LanguageProvider';\nvar NumberOfResults = 5;\nvar API_URL = \"https://\".concat(LanguageProvider.get(), \".wikipedia.org/w/api.php\");\n\nvar WikipediaAPIWrapper =\n/*#__PURE__*/\nfunction () {\n  function WikipediaAPIWrapper() {\n    _classCallCheck(this, WikipediaAPIWrapper);\n  }\n\n  _createClass(WikipediaAPIWrapper, null, [{\n    key: \"search\",\n    value: function search(input) {\n      return wiki({\n        apiUrl: API_URL\n      }).search(input).then(function (data) {\n        return data.results.splice(0, NumberOfResults);\n      });\n    }\n  }, {\n    key: \"getDetails\",\n    value: function getDetails(input) {\n      return wiki({\n        apiUrl: API_URL\n      }).page(input).then(function (page) {\n        return Promise.all([page.raw.title, page.summary(), page.coordinates(), page.mainImage()]);\n      }).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 4),\n            name = _ref2[0],\n            details = _ref2[1],\n            geo = _ref2[2],\n            img = _ref2[3];\n\n        return new locationDto(0, name, details, 0, geo, img, \"\");\n      });\n    }\n  }]);\n\n  return WikipediaAPIWrapper;\n}();\n\nWikipediaAPIWrapper.searchResult = {};\nexport { WikipediaAPIWrapper as default };","map":{"version":3,"sources":["E:/priv/github/plan-your-trip/src/frontend/src/Common/WikipediaAPIWrapper.js"],"names":["wiki","locationDto","LanguageProvider","NumberOfResults","API_URL","get","WikipediaAPIWrapper","input","apiUrl","search","then","data","results","splice","page","Promise","all","raw","title","summary","coordinates","mainImage","name","details","geo","img","searchResult"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AAEA,IAAMC,eAAe,GAAG,CAAxB;AACA,IAAMC,OAAO,qBAAcF,gBAAgB,CAACG,GAAjB,EAAd,6BAAb;;IAEqBC,mB;;;;;;;;;2BAGHC,K,EAAM;AAChB,aAAOP,IAAI,CAAC;AAACQ,QAAAA,MAAM,EAAEJ;AAAT,OAAD,CAAJ,CACNK,MADM,CACCF,KADD,EAENG,IAFM,CAED,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,OAAL,CAAaC,MAAb,CAAoB,CAApB,EAAuBV,eAAvB,CAAJ;AAAA,OAFH,CAAP;AAGH;;;+BAEiBI,K,EAAM;AACpB,aAAOP,IAAI,CAAC;AAACQ,QAAAA,MAAM,EAAEJ;AAAT,OAAD,CAAJ,CACNU,IADM,CACDP,KADC,EAENG,IAFM,CAED,UAAAI,IAAI,EAAI;AAAC,eAAOC,OAAO,CAACC,GAAR,CAAY,CAACF,IAAI,CAACG,GAAL,CAASC,KAAV,EAAiBJ,IAAI,CAACK,OAAL,EAAjB,EAAiCL,IAAI,CAACM,WAAL,EAAjC,EAAqDN,IAAI,CAACO,SAAL,EAArD,CAAZ,CAAP;AAA2F,OAFnG,EAGNX,IAHM,CAGD;AAAA;AAAA,YAAEY,IAAF;AAAA,YAAQC,OAAR;AAAA,YAAiBC,GAAjB;AAAA,YAAsBC,GAAtB;;AAAA,eAA+B,IAAIxB,WAAJ,CAAgB,CAAhB,EAAmBqB,IAAnB,EAAyBC,OAAzB,EAAkC,CAAlC,EAAqCC,GAArC,EAA0CC,GAA1C,EAA+C,EAA/C,CAA/B;AAAA,OAHC,CAAP;AAIH;;;;;;AAdgBnB,mB,CACVoB,Y,GAAe,E;SADLpB,mB","sourcesContent":["import wiki from 'wikijs';\r\nimport locationDto from '../components/Locations/LocationDto';\r\nimport LanguageProvider from '../Common/LanguageProvider';\r\n\r\nconst NumberOfResults = 5;\r\nconst API_URL = `https://${LanguageProvider.get()}.wikipedia.org/w/api.php`;\r\n\r\nexport default class WikipediaAPIWrapper{\r\n    static searchResult = {};\r\n\r\n    static search(input){\r\n        return wiki({apiUrl: API_URL})\r\n        .search(input)\r\n        .then(data => data.results.splice(0, NumberOfResults))\r\n    }\r\n\r\n    static getDetails(input){\r\n        return wiki({apiUrl: API_URL})\r\n        .page(input)\r\n        .then(page => {return Promise.all([page.raw.title, page.summary(), page.coordinates(), page.mainImage()])})\r\n        .then(([name, details, geo, img] )=> new locationDto(0, name, details, 0, geo, img, \"\"))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}