{"ast":null,"code":"import _slicedToArray from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\src\\\\components\\\\ListView.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useLocationsState, LocationsStateActions } from '../State/LocationsState';\nimport useLoggerService from '../Services/Diagnostics/LoggerService';\n\nvar ListView = function ListView() {\n  var _useLocationsState = useLocationsState(),\n      _useLocationsState2 = _slicedToArray(_useLocationsState, 2),\n      state = _useLocationsState2[0],\n      dispatchLocations = _useLocationsState2[1];\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      lists = _useState2[0],\n      setLists = _useState2[1];\n\n  var logger = useLoggerService();\n  useEffect(function () {\n    fetch(\"http://localhost:5000/lists\").then(function (response) {\n      if (response.status !== 200) {\n        logger.error(\"[ListView] Cannot fetch locations. Error: \".concat(response.statusText, \". Code: \").concat(response.status));\n      } else {\n        response.json().then(function (data) {\n          if (data) {\n            logger.info(\"Successfully loaded \".concat(data.length, \" locations\"));\n            storeLocation(data);\n          }\n        });\n      }\n    });\n  }, []);\n\n  var storeLocation = function storeLocation(data) {\n    setLists(data);\n  };\n\n  var renderLists = function renderLists() {\n    if (lists) return lists.map(function (list) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \" \", list.id, \" \");\n    });\n    return '';\n  };\n\n  return React.createElement(\"div\", {\n    className: \"list-view-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \" \", renderLists(), \"  \");\n};\n\nexport default ListView;","map":{"version":3,"sources":["E:/priv/github/plan-your-trip/src/components/ListView.js"],"names":["React","useEffect","useState","useLocationsState","LocationsStateActions","useLoggerService","ListView","state","dispatchLocations","lists","setLists","logger","fetch","then","response","status","error","statusText","json","data","info","length","storeLocation","renderLists","map","list","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,iBAAT,EAA4BC,qBAA5B,QAAyD,yBAAzD;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,2BACgBH,iBAAiB,EADjC;AAAA;AAAA,MACZI,KADY;AAAA,MACLC,iBADK;;AAAA,kBAEON,QAAQ,EAFf;AAAA;AAAA,MAEZO,KAFY;AAAA,MAELC,QAFK;;AAGnB,MAAMC,MAAM,GAAGN,gBAAgB,EAA/B;AAEAJ,EAAAA,SAAS,CAAC,YAAM;AACZW,IAAAA,KAAK,+BAAL,CACKC,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBJ,QAAAA,MAAM,CAACK,KAAP,qDAA0DF,QAAQ,CAACG,UAAnE,qBAAwFH,QAAQ,CAACC,MAAjG;AACH,OAFD,MAGK;AACDD,QAAAA,QAAQ,CAACI,IAAT,GACKL,IADL,CACU,UAAAM,IAAI,EAAI;AACV,cAAIA,IAAJ,EAAU;AACNR,YAAAA,MAAM,CAACS,IAAP,+BAAmCD,IAAI,CAACE,MAAxC;AACAC,YAAAA,aAAa,CAACH,IAAD,CAAb;AACH;AAEJ,SAPL;AAQH;AACJ,KAfL;AAgBH,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,MAAIG,aAAa,GAAG,SAAhBA,aAAgB,CAACH,IAAD,EAAU;AAC1BT,IAAAA,QAAQ,CAACS,IAAD,CAAR;AACH,GAFD;;AAIA,MAAII,WAAW,GAAG,SAAdA,WAAc,GAAM;AACpB,QAAId,KAAJ,EACI,OAAOA,KAAK,CAACe,GAAN,CAAU,UAACC,IAAD;AAAA,aACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOA,IAAI,CAACC,EAAZ,MADa;AAAA,KAAV,CAAP;AAIJ,WAAO,EAAP;AACH,GAPD;;AASA,SAAQ;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuCH,WAAW,EAAlD,OAAR;AACH,CAtCD;;AAyCA,eAAejB,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useLocationsState, LocationsStateActions } from '../State/LocationsState'\r\nimport useLoggerService from '../Services/Diagnostics/LoggerService'\r\n\r\n\r\nconst ListView = () => {\r\n    const [state, dispatchLocations] = useLocationsState();\r\n    const [lists, setLists] = useState();\r\n    const logger = useLoggerService();\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:5000/lists`)\r\n            .then(response => {\r\n                if (response.status !== 200) {\r\n                    logger.error(`[ListView] Cannot fetch locations. Error: ${response.statusText}. Code: ${response.status}`)\r\n                }\r\n                else {\r\n                    response.json()\r\n                        .then(data => {\r\n                            if (data) {\r\n                                logger.info(`Successfully loaded ${data.length} locations`)\r\n                                storeLocation(data);\r\n                            }\r\n\r\n                        })\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    var storeLocation = (data) => {\r\n        setLists(data);\r\n    }\r\n\r\n    var renderLists = () => {\r\n        if (lists)\r\n            return lists.map((list) => (\r\n                <div> {list.id} </div>\r\n            ))\r\n\r\n        return ''\r\n    }\r\n\r\n    return (<div className=\"list-view-container\"> {renderLists()}  </div>)\r\n}\r\n\r\n\r\nexport default ListView;"]},"metadata":{},"sourceType":"module"}