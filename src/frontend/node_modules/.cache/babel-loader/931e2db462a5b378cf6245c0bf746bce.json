{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: !0\n}), exports.default = wiki;\n\nvar _util = require('./util'),\n    _page = require('./page'),\n    _page2 = _interopRequireDefault(_page);\n\nfunction _interopRequireDefault(a) {\n  return a && a.__esModule ? a : {\n    default: a\n  };\n}\n\nvar defaultOptions = {\n  apiUrl: 'http://en.wikipedia.org/w/api.php',\n  origin: '*'\n};\n\nfunction wiki() {\n  function a(q) {\n    return q.query.redirects && 1 === q.query.redirects.length ? (0, _util.api)(p, {\n      prop: 'info|pageprops',\n      inprop: 'url',\n      ppprop: 'disambiguation',\n      titles: q.query.redirects[0].to\n    }) : q;\n  }\n\n  function b(q) {\n    var r = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 50;\n    return (0, _util.pagination)(p, {\n      list: 'search',\n      srsearch: q,\n      srlimit: r\n    }, function (s) {\n      return s.query.search.map(function (t) {\n        return t.title;\n      });\n    }).catch(function (s) {\n      if ('\"text\" search is disabled.' === s.message) return d(q, r);\n      throw s;\n    });\n  }\n\n  function d(q) {\n    var r = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 50;\n    return (0, _util.api)(p, {\n      search: q,\n      limit: r,\n      namespace: 0,\n      action: 'opensearch',\n      redirects: void 0\n    }).then(function (s) {\n      return s[1];\n    });\n  }\n\n  function f(q) {\n    return (0, _util.api)(p, {\n      prop: 'info|pageprops',\n      inprop: 'url',\n      ppprop: 'disambiguation',\n      titles: q\n    }).then(a).then(function (r) {\n      var s = Object.keys(r.query.pages)[0];\n      if (!s || '-1' === s) throw new Error('No article found');\n      return (0, _page2.default)(r.query.pages[s], p);\n    });\n  }\n\n  var o = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {};\n  this instanceof wiki && console.log('Please do not use wikijs ^1.0.0 as a class. Please see the new README.');\n  var p = Object.assign({}, defaultOptions, o);\n  return {\n    search: b,\n    random: function random() {\n      var q = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : 1;\n      return (0, _util.api)(p, {\n        list: 'random',\n        rnnamespace: 0,\n        rnlimit: q\n      }).then(function (r) {\n        return r.query.random.map(function (s) {\n          return s.title;\n        });\n      });\n    },\n    page: f,\n    geoSearch: function geoSearch(q, r) {\n      var s = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : 1e3;\n      return (0, _util.api)(p, {\n        list: 'geosearch',\n        gsradius: s,\n        gscoord: q + '|' + r\n      }).then(function (t) {\n        return t.query.geosearch.map(function (u) {\n          return u.title;\n        });\n      });\n    },\n    options: o,\n    findById: function findById(q) {\n      return (0, _util.api)(p, {\n        prop: 'info|pageprops',\n        inprop: 'url',\n        ppprop: 'disambiguation',\n        pageids: q\n      }).then(a).then(function (r) {\n        var s = Object.keys(r.query.pages)[0];\n        if (!s || '-1' === s) throw new Error('No article found');\n        return (0, _page2.default)(r.query.pages[s], p);\n      });\n    },\n    find: function find(q) {\n      var r = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : function (s) {\n        return s[0];\n      };\n      return b(q).then(function (s) {\n        return r(s.results);\n      }).then(function (s) {\n        return f(s);\n      });\n    },\n    allPages: function allPages() {\n      return (0, _util.aggregate)(p, {}, 'allpages', 'title', 'ap');\n    },\n    allCategories: function allCategories() {\n      return (0, _util.aggregate)(p, {}, 'allcategories', '*', 'ac');\n    },\n    pagesInCategory: function pagesInCategory(q) {\n      return (0, _util.aggregate)(p, {\n        cmtitle: q\n      }, 'categorymembers', 'title', 'cm');\n    },\n    opensearch: d,\n    prefixSearch: function prefixSearch(q) {\n      var r = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 50;\n      return (0, _util.pagination)(p, {\n        list: 'prefixsearch',\n        pslimit: r,\n        psprofile: 'fuzzy',\n        pssearch: q\n      }, function (s) {\n        return s.query.prefixsearch.map(function (t) {\n          return t.title;\n        });\n      });\n    },\n    mostViewed: function mostViewed() {\n      return (0, _util.api)(p, {\n        action: 'query',\n        list: 'mostviewed'\n      }).then(function (q) {\n        return q.query.mostviewed.map(function (r) {\n          var s = r.title,\n              t = r.count;\n          return {\n            title: s,\n            count: t\n          };\n        });\n      });\n    },\n    api: function api(q) {\n      return (0, _util.api)(p, q);\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"script"}