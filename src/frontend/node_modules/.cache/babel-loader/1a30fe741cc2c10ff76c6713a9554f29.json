{"ast":null,"code":"import _objectDestructuringEmpty from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectDestructuringEmpty\";\nimport _slicedToArray from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\src\\\\components\\\\Lists\\\\ListViewMenu.js\";\nimport React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport GpxFileDownloader from '../../Common/GpxFileDownloader';\nimport { useLocationsState, LocationsStateActions } from '../../State/LocationsState';\nimport { useModalState, ModalStateAction, ModalTypes } from '../../State/ModalStateProvider';\nimport { useLocationsListsState, LocationsListsStateActions, LocationListViewType } from '../../State/LocationsListsState';\n\nvar ListViewMenuItem = function ListViewMenuItem(_ref) {\n  var icon = _ref.icon,\n      action = _ref.action,\n      title = _ref.title;\n  console.log(icon);\n  return React.createElement(\"div\", {\n    className: \"list-view-menu-item\",\n    title: title,\n    onClick: function onClick() {\n      action();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: ['far', icon],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n};\n\nvar ListViewMenu = function ListViewMenu() {\n  var _useLocationsListsSta = useLocationsListsState(),\n      _useLocationsListsSta2 = _slicedToArray(_useLocationsListsSta, 2);\n\n  _objectDestructuringEmpty(_useLocationsListsSta2[0]);\n\n  var dispatchList = _useLocationsListsSta2[1];\n\n  var _useLocationsState = useLocationsState(),\n      _useLocationsState2 = _slicedToArray(_useLocationsState, 2),\n      locations = _useLocationsState2[0].locations,\n      dispatchLocations = _useLocationsState2[1];\n\n  var _useModalState = useModalState(),\n      _useModalState2 = _slicedToArray(_useModalState, 2);\n\n  _objectDestructuringEmpty(_useModalState2[0]);\n\n  var dispatchModal = _useModalState2[1];\n  return React.createElement(\"div\", {\n    className: \"list-view-menu-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-menu-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"sort filter\"), React.createElement(\"div\", {\n    className: \"list-view-menu-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(ListViewMenuItem, {\n    icon: \"file-alt\",\n    title: \"download locations\",\n    action: function action() {\n      return GpxFileDownloader.download(locations);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(ListViewMenuItem, {\n    icon: \"plus-square\",\n    title: \"add new location\",\n    action: function action() {\n      return dispatchModal({\n        type: ModalStateAction.show,\n        modalType: ModalTypes.addNewLocationSelect\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(ListViewMenuItem, {\n    icon: \"edit\",\n    title: \"edit list\",\n    action: function action() {\n      alert(\"TODO\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(ListViewMenuItem, {\n    icon: \"trash-alt\",\n    title: \"remove list\",\n    action: function action() {\n      return dispatchLocations({\n        type: LocationsStateActions.removeAllLocations\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"list-view-menu-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ListViewMenuItem, {\n    icon: \"th-list\",\n    title: \"show as list\",\n    action: function action() {\n      return dispatchList({\n        type: LocationsListsStateActions.setView,\n        data: LocationListViewType.list\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(ListViewMenuItem, {\n    icon: \"th-large\",\n    title: \"show as grid\",\n    action: function action() {\n      return dispatchList({\n        type: LocationsListsStateActions.setView,\n        data: LocationListViewType.grid\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n};\n\nexport default ListViewMenu;","map":{"version":3,"sources":["E:/priv/github/plan-your-trip/src/components/Lists/ListViewMenu.js"],"names":["React","useEffect","useState","FontAwesomeIcon","GpxFileDownloader","useLocationsState","LocationsStateActions","useModalState","ModalStateAction","ModalTypes","useLocationsListsState","LocationsListsStateActions","LocationListViewType","ListViewMenuItem","icon","action","title","console","log","ListViewMenu","dispatchList","locations","dispatchLocations","dispatchModal","download","type","show","modalType","addNewLocationSelect","alert","removeAllLocations","setView","data","list","grid"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport GpxFileDownloader from '../../Common/GpxFileDownloader'\r\nimport { useLocationsState, LocationsStateActions } from '../../State/LocationsState'\r\nimport { useModalState, ModalStateAction, ModalTypes } from '../../State/ModalStateProvider'\r\nimport { useLocationsListsState, LocationsListsStateActions, LocationListViewType } from '../../State/LocationsListsState'\r\n\r\nconst ListViewMenuItem = ({icon, action, title}) => {\r\n    console.log(icon)\r\n    return (\r\n        <div className=\"list-view-menu-item\" title={title} onClick={()=>{action()}}>\r\n            <FontAwesomeIcon \r\n                icon={['far', icon]}  />\r\n        </div>)\r\n}\r\n\r\nconst ListViewMenu = () => {\r\n    const [{}, dispatchList] = useLocationsListsState();\r\n    const [{locations}, dispatchLocations] = useLocationsState();\r\n    const [{}, dispatchModal] = useModalState();\r\n\r\n    return (<div className=\"list-view-menu-container\">\r\n        <div className=\"list-view-menu-section\">\r\n            sort filter\r\n        </div>\r\n        <div className=\"list-view-menu-section\">\r\n            <ListViewMenuItem icon='file-alt' title=\"download locations\" action={()=>GpxFileDownloader.download(locations)} />\r\n            <ListViewMenuItem icon=\"plus-square\" title=\"add new location\" action={()=>dispatchModal({type: ModalStateAction.show, modalType: ModalTypes.addNewLocationSelect})} />\r\n            <ListViewMenuItem icon=\"edit\" title=\"edit list\" action={()=>{alert(\"TODO\")}} />\r\n            <ListViewMenuItem icon=\"trash-alt\" title=\"remove list\" action={()=>dispatchLocations({type: LocationsStateActions.removeAllLocations})} />\r\n        </div>\r\n        <div className=\"list-view-menu-section\">\r\n            <ListViewMenuItem icon='th-list' title=\"show as list\" action={()=>dispatchList({type: LocationsListsStateActions.setView, data: LocationListViewType.list})} />\r\n            <ListViewMenuItem icon='th-large' title=\"show as grid\" action={()=>dispatchList({type: LocationsListsStateActions.setView, data: LocationListViewType.grid})} />\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default ListViewMenu;"]},"metadata":{},"sourceType":"module"}