{"ast":null,"code":"import _slicedToArray from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\src\\\\components\\\\ToasterNotifications.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNotificationState, NotificationTypes, NotificationsActions } from './../State/NotificationState';\n\nvar CreateToasterNotification = function CreateToasterNotification(notification, onClose) {\n  switch (notification.type) {\n    case NotificationTypes.info:\n    case NotificationTypes.success:\n      return React.createElement(ToasterNotificationSuccess, {\n        message: notification.content,\n        timeout: notification.timeout,\n        onClose: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      });\n\n    case NotificationTypes.error:\n      return React.createElement(ToasterNotificationError, {\n        message: notification.content,\n        timeout: notification.timeout,\n        onClose: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      });\n\n    default:\n      console.info(\"[ToasterNotification] Incorrect notification type: \\\"\".concat(notification.type, \"\\\".\"));\n  }\n};\n\nvar ToasterNotifications = function ToasterNotifications() {\n  var _useNotificationState = useNotificationState(),\n      _useNotificationState2 = _slicedToArray(_useNotificationState, 2),\n      notifications = _useNotificationState2[0].notifications,\n      dispatchNotifications = _useNotificationState2[1];\n\n  var renderNotifications = function renderNotifications() {\n    var output = notifications.map(function (notification) {\n      return CreateToasterNotification(notification, function () {\n        dispatchNotifications({\n          type: NotificationsActions.hide,\n          data: notification.id\n        });\n      });\n    });\n    return output;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"toaster-notifications-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"toaster-notifications-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, renderNotifications()));\n};\n\nvar ToasterNotificationItem = function ToasterNotificationItem(_ref) {\n  var type = _ref.type,\n      title = _ref.title,\n      content = _ref.content,\n      icon = _ref.icon,\n      timeout = _ref.timeout,\n      onClose = _ref.onClose;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      timer = _useState2[0],\n      setTimer = _useState2[1];\n\n  useEffect(function () {\n    startTimer();\n  }, []);\n\n  var startTimer = function startTimer() {\n    setTimer(setTimeout(onClose, timeout));\n  };\n\n  var stopTimer = function stopTimer() {\n    clearTimeout(timer);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"toaster-notification-item toaster-notification-item-\".concat(type),\n    onClick: function onClick() {\n      return onClose();\n    },\n    onMouseEnter: function onMouseEnter() {\n      return stopTimer();\n    },\n    onMouseLeave: function onMouseLeave() {\n      return startTimer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"toaster-notification-item-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: icon,\n    className: \"fa-2x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"toaster-notification-item-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"toaster-notification-item-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: \"toaster-notification-item-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, content)));\n};\n\nvar ToasterNotificationError = function ToasterNotificationError(_ref2) {\n  var message = _ref2.message,\n      timeout = _ref2.timeout,\n      onClose = _ref2.onClose;\n  return React.createElement(ToasterNotificationItem, {\n    title: \"Error\",\n    type: \"error\",\n    icon: \"exclamation\",\n    content: message,\n    timeout: timeout,\n    onClose: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  });\n};\n\nvar ToasterNotificationSuccess = function ToasterNotificationSuccess(_ref3) {\n  var message = _ref3.message,\n      timeout = _ref3.timeout,\n      onClose = _ref3.onClose;\n  return React.createElement(ToasterNotificationItem, {\n    title: \"Success\",\n    type: \"info\",\n    icon: \"check\",\n    content: message,\n    timeout: timeout,\n    onClose: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  });\n};\n\nexport default ToasterNotifications;","map":{"version":3,"sources":["E:/priv/github/plan-your-trip/src/components/ToasterNotifications.js"],"names":["React","useState","useEffect","FontAwesomeIcon","useNotificationState","NotificationTypes","NotificationsActions","CreateToasterNotification","notification","onClose","type","info","success","content","timeout","error","console","ToasterNotifications","notifications","dispatchNotifications","renderNotifications","output","map","hide","data","id","ToasterNotificationItem","title","icon","timer","setTimer","startTimer","setTimeout","stopTimer","clearTimeout","ToasterNotificationError","message","ToasterNotificationSuccess"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport {useNotificationState, NotificationTypes, NotificationsActions} from './../State/NotificationState'\r\n\r\nconst CreateToasterNotification = (notification, onClose) => {\r\n    switch(notification.type){\r\n        case NotificationTypes.info:\r\n        case NotificationTypes.success:\r\n            return <ToasterNotificationSuccess message={notification.content} timeout={notification.timeout} onClose={onClose}/>\r\n        case NotificationTypes.error:\r\n            return <ToasterNotificationError message={notification.content} timeout={notification.timeout} onClose={onClose}/>\r\n        default: \r\n            console.info(`[ToasterNotification] Incorrect notification type: \"${notification.type}\".`);\r\n    }\r\n    \r\n}\r\n\r\nconst ToasterNotifications = () => {\r\n    const [{notifications}, dispatchNotifications] = useNotificationState();\r\n\r\n    var renderNotifications = () => {\r\n        var output = notifications.map((notification) => (\r\n            CreateToasterNotification(\r\n                notification, \r\n                ()=>{dispatchNotifications({type: NotificationsActions.hide, data: notification.id})}\r\n            )\r\n        ));\r\n\r\n        return output;\r\n    }\r\n\r\n    return (\r\n        <div className=\"toaster-notifications-container\">\r\n            <div className=\"toaster-notifications-box\">\r\n                {renderNotifications()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ToasterNotificationItem = ({type, title, content, icon, timeout, onClose}) => {\r\n    const [timer, setTimer] = useState(null);\r\n\r\n    useEffect(() => {\r\n        startTimer()\r\n    }, [])\r\n    \r\n\r\n    var startTimer = () => {\r\n        setTimer(setTimeout(onClose, timeout));\r\n    }\r\n\r\n    var stopTimer = () => {\r\n        clearTimeout(timer);\r\n    }\r\n\r\n    return <div \r\n                className={`toaster-notification-item toaster-notification-item-${type}`} \r\n                onClick={()=>onClose()}\r\n                onMouseEnter={()=>stopTimer()}\r\n                onMouseLeave={()=>startTimer()}\r\n                >\r\n        <div className=\"toaster-notification-item-icon\">\r\n            <FontAwesomeIcon icon={icon} className=\"fa-2x\"/>\r\n        </div>\r\n        <div className=\"toaster-notification-item-body\">\r\n            <div className=\"toaster-notification-item-title\">{title}</div>\r\n            <div className=\"toaster-notification-item-content\">{content}</div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst ToasterNotificationError = ({message, timeout, onClose}) => {\r\n    return (<ToasterNotificationItem title=\"Error\" type=\"error\" icon=\"exclamation\" content={message} timeout={timeout} onClose={onClose}/>);\r\n                \r\n}\r\n\r\nconst ToasterNotificationSuccess = ({message,timeout, onClose}) => {\r\n    return (<ToasterNotificationItem title=\"Success\" type=\"info\" icon=\"check\" content={message} timeout={timeout} onClose={onClose}/>);\r\n}\r\n\r\nexport default ToasterNotifications;"]},"metadata":{},"sourceType":"module"}