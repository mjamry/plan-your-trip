{"ast":null,"code":"import _objectDestructuringEmpty from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectDestructuringEmpty\";\nimport _slicedToArray from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\src\\\\components\\\\Lists\\\\ListView.js\";\nimport React, { useEffect, useState } from 'react';\nimport useLoggerService from '../../Services/Diagnostics/LoggerService';\nimport { useLocationsListsState, LocationsListsStateActions, LocationListViewType } from '../../State/LocationsListsState';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport GpxFileDownloader from '../../Common/GpxFileDownloader';\nimport { useLocationsState, LocationsStateActions } from '../../State/LocationsState';\nimport { useModalState, ModalStateAction, ModalTypes } from '../../State/ModalStateProvider';\n\nvar ListViewMenuItem = function ListViewMenuItem(_ref) {\n  var icon = _ref.icon,\n      action = _ref.action,\n      title = _ref.title;\n  return React.createElement(\"div\", {\n    className: \"list-view-menu-item\",\n    title: title,\n    onClick: function onClick() {\n      action();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n};\n\nvar ListViewMenu = function ListViewMenu() {\n  var _useLocationsListsSta = useLocationsListsState(),\n      _useLocationsListsSta2 = _slicedToArray(_useLocationsListsSta, 2);\n\n  _objectDestructuringEmpty(_useLocationsListsSta2[0]);\n\n  var dispatchList = _useLocationsListsSta2[1];\n\n  var _useLocationsState = useLocationsState(),\n      _useLocationsState2 = _slicedToArray(_useLocationsState, 2),\n      locations = _useLocationsState2[0].locations,\n      dispatchLocations = _useLocationsState2[1];\n\n  var _useModalState = useModalState(),\n      _useModalState2 = _slicedToArray(_useModalState, 2);\n\n  _objectDestructuringEmpty(_useModalState2[0]);\n\n  var dispatchModal = _useModalState2[1];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-menu-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(ListViewMenuItem, {\n    icon: \"file-download\",\n    title: \"download locations\",\n    action: function action() {\n      return GpxFileDownloader.download(locations);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(ListViewMenuItem, {\n    icon: \"search-plus\",\n    title: \"add new location\",\n    action: function action() {\n      return dispatchModal({\n        type: ModalStateAction.show,\n        modalType: ModalTypes.addNewLocationSelect\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(ListViewMenuItem, {\n    icon: \"edit\",\n    title: \"edit list\",\n    action: function action() {\n      alert(\"TODO\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(ListViewMenuItem, {\n    icon: \"trash-alt\",\n    title: \"remove list\",\n    action: function action() {\n      return dispatchLocations({\n        type: LocationsStateActions.removeAllLocations\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"list-view-menu-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(ListViewMenuItem, {\n    icon: \"th-list\",\n    title: \"show as list\",\n    action: function action() {\n      return dispatchList({\n        type: LocationsListsStateActions.setView,\n        data: LocationListViewType.list\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(ListViewMenuItem, {\n    icon: \"th-large\",\n    title: \"show as grid\",\n    action: function action() {\n      return dispatchList({\n        type: LocationsListsStateActions.setView,\n        data: LocationListViewType.grid\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n};\n\nvar ListView = function ListView() {\n  var _useLocationsListsSta3 = useLocationsListsState(),\n      _useLocationsListsSta4 = _slicedToArray(_useLocationsListsSta3, 2),\n      listState = _useLocationsListsSta4[0],\n      dispatchList = _useLocationsListsSta4[1];\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      lists = _useState2[0],\n      setLists = _useState2[1];\n\n  var logger = useLoggerService();\n  useEffect(function () {\n    fetch(\"http://localhost:5000/lists\").then(function (response) {\n      if (response.status !== 200) {\n        logger.error(\"[ListView] Cannot fetch lists. Error: \".concat(response.statusText, \". Code: \").concat(response.status));\n      } else {\n        response.json().then(function (data) {\n          if (data) {\n            logger.info(\"[ListView] Successfully loaded \".concat(data.length, \" lists\"));\n            storeLocation(data);\n          }\n        });\n      }\n    });\n  }, []);\n\n  var storeLocation = function storeLocation(data) {\n    setLists(data);\n  };\n\n  var selectList = function selectList(listId) {\n    logger.debug(\"Selected list -> Id: \".concat(listId));\n    dispatchList({\n      type: LocationsListsStateActions.selectList,\n      data: listId\n    });\n  };\n\n  var renderLists = function renderLists() {\n    if (lists) return lists.map(function (list) {\n      return React.createElement(\"option\", {\n        className: \"list-view-item\",\n        onClick: function onClick() {\n          return selectList(list.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, list.name);\n    });\n    return '';\n  };\n\n  return React.createElement(\"div\", {\n    className: \"list-view-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, renderLists())), React.createElement(\"div\", {\n    className: \"list-view-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"this is a list description\")), React.createElement(\"div\", {\n    className: \"list-view-details-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"created on:\"), React.createElement(\"div\", {\n    className: \"list-view-details-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"01/01/2000\")), React.createElement(\"div\", {\n    className: \"list-view-details-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"last updated on:\"), React.createElement(\"div\", {\n    className: \"list-view-details-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"01/01/2000\")), React.createElement(\"div\", {\n    className: \"list-view-details-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"number of items:\"), React.createElement(\"div\", {\n    className: \"list-view-details-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"11\")), React.createElement(\"div\", {\n    className: \"list-view-details-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"private:\"), React.createElement(\"div\", {\n    className: \"list-view-details-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"yes\"))));\n};\n\nexport default ListView;","map":{"version":3,"sources":["E:/priv/github/plan-your-trip/src/components/Lists/ListView.js"],"names":["React","useEffect","useState","useLoggerService","useLocationsListsState","LocationsListsStateActions","LocationListViewType","FontAwesomeIcon","GpxFileDownloader","useLocationsState","LocationsStateActions","useModalState","ModalStateAction","ModalTypes","ListViewMenuItem","icon","action","title","ListViewMenu","dispatchList","locations","dispatchLocations","dispatchModal","download","type","show","modalType","addNewLocationSelect","alert","removeAllLocations","setView","data","list","grid","ListView","listState","lists","setLists","logger","fetch","then","response","status","error","statusText","json","info","length","storeLocation","selectList","listId","debug","renderLists","map","id","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport useLoggerService from '../../Services/Diagnostics/LoggerService'\r\nimport { useLocationsListsState, LocationsListsStateActions, LocationListViewType } from '../../State/LocationsListsState'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport GpxFileDownloader from '../../Common/GpxFileDownloader'\r\nimport { useLocationsState, LocationsStateActions } from '../../State/LocationsState'\r\nimport { useModalState, ModalStateAction, ModalTypes } from '../../State/ModalStateProvider'\r\n\r\nconst ListViewMenuItem = ({icon, action, title}) => {\r\n    return (\r\n        <div className=\"list-view-menu-item\" title={title} onClick={()=>{action()}}>\r\n            <FontAwesomeIcon \r\n                icon={icon}  />\r\n        </div>)\r\n}\r\n\r\nconst ListViewMenu = () => {\r\n    const [{}, dispatchList] = useLocationsListsState();\r\n    const [{locations}, dispatchLocations] = useLocationsState();\r\n    const [{}, dispatchModal] = useModalState();\r\n    \r\n    return (<div>\r\n        <div className=\"list-view-menu-container\">\r\n            <ListViewMenuItem icon=\"file-download\" title=\"download locations\" action={()=>GpxFileDownloader.download(locations)} />\r\n            <ListViewMenuItem icon=\"search-plus\" title=\"add new location\" action={()=>dispatchModal({type: ModalStateAction.show, modalType: ModalTypes.addNewLocationSelect})} />\r\n            <ListViewMenuItem icon=\"edit\" title=\"edit list\" action={()=>{alert(\"TODO\")}} />\r\n            <ListViewMenuItem icon=\"trash-alt\" title=\"remove list\" action={()=>dispatchLocations({type: LocationsStateActions.removeAllLocations})} />\r\n        </div>\r\n        <div className=\"list-view-menu-container\">\r\n            <ListViewMenuItem icon='th-list' title=\"show as list\" action={()=>dispatchList({type: LocationsListsStateActions.setView, data: LocationListViewType.list})} />\r\n            <ListViewMenuItem icon='th-large' title=\"show as grid\" action={()=>dispatchList({type: LocationsListsStateActions.setView, data: LocationListViewType.grid})} />\r\n        </div>\r\n    </div>)\r\n}\r\n\r\n\r\nconst ListView = () => {\r\n    const [listState, dispatchList] = useLocationsListsState();\r\n    const [lists, setLists] = useState();\r\n    const logger = useLoggerService();\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:5000/lists`)\r\n            .then(response => {\r\n                if (response.status !== 200) {\r\n                    logger.error(`[ListView] Cannot fetch lists. Error: ${response.statusText}. Code: ${response.status}`)\r\n                }\r\n                else {\r\n                    response.json()\r\n                        .then(data => {\r\n                            if (data) {\r\n                                logger.info(`[ListView] Successfully loaded ${data.length} lists`)\r\n                                storeLocation(data);\r\n                            }\r\n\r\n                        })\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    var storeLocation = (data) => {\r\n        setLists(data);\r\n    }\r\n\r\n    var selectList = (listId) => {\r\n        logger.debug(`Selected list -> Id: ${listId}`)\r\n        dispatchList({type: LocationsListsStateActions.selectList, data: listId});\r\n    }\r\n\r\n    var renderLists = () => {\r\n        if (lists)\r\n            return lists.map((list) => (\r\n                <option className=\"list-view-item\" onClick={()=>selectList(list.id)}>{list.name}</option>\r\n            ))\r\n\r\n        return ''\r\n    }\r\n\r\n    return (\r\n    <div className=\"list-view-container\">\r\n        <div className=\"list-view-details\">\r\n            <div className=\"list-view-details-item\">\r\n            <div className=\"list-view-dropdown\">\r\n                <select>\r\n                    {renderLists()}\r\n                </select>\r\n            </div>\r\n            <div className=\"list-view-description\">this is a list description</div>\r\n            </div>\r\n            <div className=\"list-view-details-item\">\r\n                <div className=\"list-view-details-name\">created on:</div>\r\n                <div className=\"list-view-details-data\">01/01/2000</div>\r\n            </div>\r\n            <div className=\"list-view-details-item\">\r\n                <div className=\"list-view-details-name\">last updated on:</div>\r\n                <div className=\"list-view-details-data\">01/01/2000</div>\r\n            </div>\r\n            <div className=\"list-view-details-item\">\r\n                <div className=\"list-view-details-name\">number of items:</div>\r\n                <div className=\"list-view-details-data\">11</div>\r\n            </div>\r\n            <div className=\"list-view-details-item\">\r\n                <div className=\"list-view-details-name\">private:</div>\r\n                <div className=\"list-view-details-data\">yes</div>\r\n            </div>\r\n        </div>\r\n\r\n       \r\n    </div>)\r\n}\r\n\r\n\r\nexport default ListView;"]},"metadata":{},"sourceType":"module"}