{"ast":null,"code":"import _objectSpread from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\src\\\\components\\\\MapView\\\\MapView.js\";\nimport React, { useState, useEffect } from 'react';\nimport L from 'leaflet';\nimport CoordinatesValidator from '../../Common/CoordinatesValidator';\nvar defaultOptions = {\n  draggable: false,\n  style: \"locations-map-view\",\n  canAddMarker: false,\n  title: \"\"\n};\n\nvar MapView = function MapView(_ref) {\n  var locations = _ref.locations,\n      selLoc = _ref.selLoc,\n      _ref$options = _ref.options,\n      options = _ref$options === void 0 ? defaultOptions : _ref$options;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      visibleMarkers = _useState2[0],\n      setVisibleMarkers = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mapObject = _useState4[0],\n      setMapObject = _useState4[1];\n\n  var setupMarker = function setupMarker(location, coordinates) {\n    var marker = L.marker(coordinates, _objectSpread({}, options, {\n      title: location.name\n    })).addTo(mapObject).bindPopup(location.name).openPopup();\n\n    if (options.draggable) {\n      marker.on('dragend', function (e) {\n        options.onCoordinatesUpdated(marker.getLatLng());\n      });\n    }\n\n    return marker;\n  };\n\n  useEffect(function () {\n    var map = L.map('mapid', {\n      zoom: 5,\n      center: [51.505, -0.09]\n    });\n    L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      maxZoom: 19,\n      id: 'mapbox.streets',\n      accessToken: 'pk.eyJ1IjoibWphbXJ5IiwiYSI6ImNqcmdtc3JnZjAyYTA0YXFxMDRkMG93MjYifQ.u8XNxfJHLLy3Vnbo3R40sA'\n    }).addTo(map);\n    setMapObject(map);\n  }, []);\n  useEffect(function () {\n    if (mapObject) {\n      visibleMarkers.forEach(function (location) {\n        location.marker.remove();\n      });\n      var markers = [];\n      locations.forEach(function (location) {\n        if (CoordinatesValidator().isValid(location.coordinates.lat) && CoordinatesValidator().isValid(location.coordinates.lon)) {\n          var coordinates = [location.coordinates.lat, location.coordinates.lon];\n          markers.push({\n            marker: setupMarker(location, coordinates),\n            id: location.id\n          });\n          mapObject.setView(coordinates);\n        }\n      });\n      setVisibleMarkers(markers);\n\n      if (options.canAddMarker) {\n        mapObject.on('click', function (e) {\n          options.onCoordinatesUpdated(e.latlng);\n        });\n      }\n    }\n  }, [mapObject, locations]);\n  useEffect(function () {\n    if (selLoc && mapObject) {\n      var selectedLocation = visibleMarkers.find(function (el) {\n        return el.id === selectedLocation.id;\n      });\n\n      if (selectedLocation) {\n        mapObject.setView([selectedLocation.coordinates.lat, selectedLocation.coordinates.lon]);\n        selectedLocation.marker.bindPopup(selectedLocation.name).openPopup();\n      }\n    }\n  }, [selLoc]);\n  return React.createElement(\"div\", {\n    id: \"mapid\",\n    className: options.style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  });\n};\n\nexport default MapView;","map":{"version":3,"sources":["E:/priv/github/plan-your-trip/src/components/MapView/MapView.js"],"names":["React","useState","useEffect","L","CoordinatesValidator","defaultOptions","draggable","style","canAddMarker","title","MapView","locations","selLoc","options","visibleMarkers","setVisibleMarkers","mapObject","setMapObject","setupMarker","location","coordinates","marker","name","addTo","bindPopup","openPopup","on","e","onCoordinatesUpdated","getLatLng","map","zoom","center","tileLayer","attribution","maxZoom","id","accessToken","forEach","remove","markers","isValid","lat","lon","push","setView","latlng","selectedLocation","find","el"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport L from 'leaflet'\r\nimport CoordinatesValidator from '../../Common/CoordinatesValidator'\r\n\r\nconst defaultOptions = {\r\n    draggable: false,\r\n    style: \"locations-map-view\",\r\n    canAddMarker: false,\r\n    title:\"\"\r\n}\r\n\r\nvar MapView = ({locations, selLoc, options = defaultOptions}) => {\r\n    const [visibleMarkers, setVisibleMarkers] = useState([]);\r\n    const [mapObject, setMapObject] = useState(null);\r\n    \r\n    var setupMarker = (location, coordinates) => {\r\n        var marker = L.marker(coordinates, {...options, title: location.name})\r\n                            .addTo(mapObject)\r\n                            .bindPopup(location.name)\r\n                            .openPopup()\r\n\r\n        if(options.draggable){\r\n            marker.on('dragend', (e) => {\r\n                options.onCoordinatesUpdated(marker.getLatLng())\r\n            })\r\n        }\r\n\r\n        return marker;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        var map = L.map('mapid', \r\n        {\r\n            zoom:5,\r\n            center: [51.505, -0.09]\r\n        });\r\n\r\n        L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\r\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\r\n            maxZoom: 19,\r\n            id: 'mapbox.streets',\r\n            accessToken: 'pk.eyJ1IjoibWphbXJ5IiwiYSI6ImNqcmdtc3JnZjAyYTA0YXFxMDRkMG93MjYifQ.u8XNxfJHLLy3Vnbo3R40sA'\r\n        }).addTo(map);\r\n        \r\n        setMapObject(map);\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        if(mapObject)\r\n        {\r\n            visibleMarkers.forEach(location => {\r\n                location.marker.remove();\r\n            })\r\n\r\n            var markers = [];\r\n            locations.forEach(location => {\r\n                if(CoordinatesValidator().isValid(location.coordinates.lat) \r\n                && CoordinatesValidator().isValid(location.coordinates.lon))\r\n                {\r\n                    let coordinates = [location.coordinates.lat, location.coordinates.lon];\r\n                    markers.push({\r\n                        marker: setupMarker(location, coordinates),\r\n                        id: location.id\r\n                    });\r\n\r\n                    mapObject.setView(coordinates)\r\n                }\r\n            })\r\n            \r\n            setVisibleMarkers(markers);\r\n\r\n            if(options.canAddMarker){\r\n                mapObject.on('click', (e)=>{\r\n                    options.onCoordinatesUpdated(e.latlng);\r\n                })\r\n            }\r\n        }\r\n    }, [mapObject, locations])\r\n\r\n    useEffect(()=>{\r\n        if(selLoc && mapObject)\r\n        {\r\n            var selectedLocation = visibleMarkers.find(el => el.id === selectedLocation.id);\r\n            if(selectedLocation){\r\n                mapObject.setView([selectedLocation.coordinates.lat, selectedLocation.coordinates.lon]);\r\n                selectedLocation.marker.bindPopup(selectedLocation.name).openPopup();\r\n            }\r\n        }\r\n    }, [selLoc])\r\n\r\n    return ( \r\n                <div id=\"mapid\" className={options.style}></div> \r\n         \r\n    );\r\n}\r\n\r\nexport default MapView;"]},"metadata":{},"sourceType":"module"}