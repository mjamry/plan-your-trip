{"ast":null,"code":"import _objectDestructuringEmpty from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectDestructuringEmpty\";\nimport _slicedToArray from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\frontend\\\\src\\\\components\\\\Search\\\\Search.js\";\nimport React, { useState, useEffect } from 'react';\nimport WikipediaAPIWrapper from '../../Common/WikipediaAPIWrapper';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport SearchResult from './SearchResult';\nimport { ModalStateAction, useModalState, ModalTypes } from '../../State/ModalStateProvider';\nimport useLoggerService from '../../Services/Diagnostics/LoggerService';\nvar SearchTimeout = 700;\n\nvar Search = function Search() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchValue = _useState2[0],\n      setSearchValue = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      timer = _useState4[0],\n      setTimer = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchResults = _useState6[0],\n      setSearchResults = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setIsLoading = _useState8[1];\n\n  var _useModalState = useModalState(),\n      _useModalState2 = _slicedToArray(_useModalState, 2);\n\n  _objectDestructuringEmpty(_useModalState2[0]);\n\n  var dispatchModal = _useModalState2[1];\n  var logger = useLoggerService();\n\n  var setupTimer = function setupTimer() {\n    clearTimeout(timer);\n    setTimer(setTimeout(handleSearchInputTimeout, SearchTimeout));\n  };\n\n  var handleSearchInputTimeout = function handleSearchInputTimeout() {\n    setIsLoading(true);\n    WikipediaAPIWrapper.search(searchValue).then(function (results) {\n      setSearchResults(results);\n      setIsLoading(false);\n    });\n  };\n\n  var handleSelection = function handleSelection(selection) {\n    setSearchResults(null);\n    setSearchValue(\"\");\n    dispatchModal({\n      type: ModalStateAction.show,\n      modalType: ModalTypes.loading\n    });\n    WikipediaAPIWrapper.getDetails(selection).then(function (location) {\n      dispatchModal({\n        type: ModalStateAction.show,\n        data: location,\n        modalType: ModalTypes.addLocation\n      });\n      logger.debug(\"[Search] Received data for \".concat(selection), location);\n    }).catch(function (error) {\n      logger.error(\"[Search] Error while fetching data: \".concat(selection), error);\n    });\n  };\n\n  useEffect(function () {\n    if (searchValue !== \"\") {\n      setupTimer();\n      setIsLoading(false);\n    }\n  }, [searchValue]);\n  return React.createElement(\"div\", {\n    className: \"Search container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"input-group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: \"search-location\",\n    className: \"fa-2x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"enter name\",\n    onChange: function onChange(e) {\n      return setSearchValue(e.target.value);\n    },\n    value: searchValue,\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"search-loading-indicator\",\n    style: {\n      display: isLoading ? \"block\" : \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-loading-indicator-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: \"spinner\",\n    spin: true,\n    className: \"fa-2x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })))), React.createElement(SearchResult, {\n    results: searchResults,\n    onSelected: handleSelection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n};\n\nexport default Search;","map":{"version":3,"sources":["E:/priv/github/plan-your-trip/frontend/src/components/Search/Search.js"],"names":["React","useState","useEffect","WikipediaAPIWrapper","FontAwesomeIcon","SearchResult","ModalStateAction","useModalState","ModalTypes","useLoggerService","SearchTimeout","Search","searchValue","setSearchValue","timer","setTimer","searchResults","setSearchResults","isLoading","setIsLoading","dispatchModal","logger","setupTimer","clearTimeout","setTimeout","handleSearchInputTimeout","search","then","results","handleSelection","selection","type","show","modalType","loading","getDetails","location","data","addLocation","debug","catch","error","e","target","value","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport WikipediaAPIWrapper from '../../Common/WikipediaAPIWrapper'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport SearchResult from './SearchResult';\r\nimport { ModalStateAction, useModalState, ModalTypes } from '../../State/ModalStateProvider'\r\nimport useLoggerService from '../../Services/Diagnostics/LoggerService'\r\n \r\nconst SearchTimeout = 700;\r\n\r\nvar Search = () => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [timer, setTimer] = useState(null);\r\n  const [searchResults, setSearchResults] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [{}, dispatchModal] = useModalState();\r\n  const logger = useLoggerService();\r\n\r\n  var setupTimer = () => {\r\n    clearTimeout(timer);\r\n    setTimer(setTimeout(handleSearchInputTimeout, SearchTimeout));\r\n  }\r\n\r\n  var handleSearchInputTimeout = () => { \r\n    setIsLoading(true);\r\n    WikipediaAPIWrapper.search(searchValue).then(results => \r\n      {\r\n        setSearchResults(results)\r\n        setIsLoading(false);\r\n      });\r\n  }\r\n\r\n  var handleSelection = (selection) => {\r\n    setSearchResults(null);\r\n    setSearchValue(\"\");\r\n    \r\n    dispatchModal({type: ModalStateAction.show, modalType: ModalTypes.loading});\r\n\r\n    WikipediaAPIWrapper\r\n      .getDetails(selection)\r\n      .then(location => {\r\n            dispatchModal({type: ModalStateAction.show, data: location, modalType: ModalTypes.addLocation})\r\n            logger.debug(`[Search] Received data for ${selection}`, location)\r\n          })\r\n      .catch((error) => {\r\n            logger.error(`[Search] Error while fetching data: ${selection}`, error);\r\n      \r\n    });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(searchValue !== \"\")\r\n    {\r\n      setupTimer();\r\n      setIsLoading(false);\r\n    }\r\n  }, [searchValue])\r\n\r\n  return (\r\n    <div className=\"Search container\">\r\n      <div className=\"input-group mb-3\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\"><FontAwesomeIcon icon=\"search-location\" className=\"fa-2x\"/></span>\r\n        </div>\r\n      <input type=\"text\" className=\"form-control\" placeholder=\"enter name\" onChange={e => setSearchValue(e.target.value)} value={searchValue} autoFocus/>\r\n        <div className=\"search-loading-indicator\" style={{display: isLoading ? \"block\" : \"none\"}}>\r\n          <div className=\"search-loading-indicator-icon\">\r\n            <FontAwesomeIcon icon=\"spinner\" spin className=\"fa-2x\"/> \r\n          </div>\r\n        </div>\r\n      </div>\r\n    <SearchResult results={searchResults} onSelected={handleSelection}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}