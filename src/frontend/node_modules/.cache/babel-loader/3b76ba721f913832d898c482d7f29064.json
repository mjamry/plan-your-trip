{"ast":null,"code":"import _classCallCheck from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nvar Creator = 'PlanYourTrip.com';\nvar XmlSchema = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\" ?>';\nvar GpxHeader = \"\\n<gpx \\nxmlns=\\\"http://www.topografix.com/GPX/1/1\\\" \\nxmlns:gpxx=\\\"http://www.garmin.com/xmlschemas/GpxExtensions/v3\\\" \\nxmlns:gpxtpx=\\\"http://www.garmin.com/xmlschemas/TrackPointExtension/v1\\\" \\ncreator=\\\"\".concat(Creator, \"\\\" \\nversion=\\\"1.1\\\" \\nxmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \\nxsi:schemaLocation=\\\"http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd\\\">\");\nvar GpxFooter = \"\\n</gpx>\";\n\nvar GpxHelper =\n/*#__PURE__*/\nfunction () {\n  function GpxHelper() {\n    _classCallCheck(this, GpxHelper);\n  }\n\n  _createClass(GpxHelper, null, [{\n    key: \"getMetadata\",\n    value: function getMetadata() {\n      return \"\\n<metadata>\\n    <link href=\\\"http://\".concat(Creator, \"\\\">\\n        <text>\").concat(Creator, \"</text>\\n    </link>\\n    <time>\").concat(new Date().toISOString(), \"</time>\\n</metadata>\");\n    }\n  }, {\n    key: \"getWaypoint\",\n    value: function getWaypoint(location) {\n      return \"\\n<wpt lat=\\\"\".concat(location.coordinates.lat, \"\\\" lon=\\\"\").concat(location.coordinates.lon, \"\\\">\\n    <name>\").concat(location.name, \" [\").concat(location.attractivness, \"]</name>\\n    <desc>\").concat(location.description, \"</desc>\\n</wpt>\");\n    }\n  }]);\n\n  return GpxHelper;\n}();\n\nvar GpxFileGenerator =\n/*#__PURE__*/\nfunction () {\n  function GpxFileGenerator() {\n    _classCallCheck(this, GpxFileGenerator);\n  }\n\n  _createClass(GpxFileGenerator, null, [{\n    key: \"generate\",\n    value: function generate(locations) {\n      return new Promise(function (resolve, reject) {\n        //File headers\n        var fileContent = XmlSchema + GpxHeader; //File metadata\n\n        fileContent += GpxHelper.getMetadata(); //Waypoints\n\n        for (var index in locations) {\n          var location = locations[index];\n\n          if (location.coordinates) {\n            fileContent += GpxHelper.getWaypoint(location);\n          } else {\n            reject(\"The \".concat(location.name, \" location has incorrect gps coordinates.\"));\n          }\n        } //File closure\n\n\n        fileContent += GpxFooter;\n        resolve(fileContent);\n      });\n    }\n  }]);\n\n  return GpxFileGenerator;\n}();\n\nexport { GpxFileGenerator as default };","map":{"version":3,"sources":["E:/priv/github/plan-your-trip/src/Common/GpxFileGenerator.js"],"names":["Creator","XmlSchema","GpxHeader","GpxFooter","GpxHelper","Date","toISOString","location","coordinates","lat","lon","name","attractivness","description","GpxFileGenerator","locations","Promise","resolve","reject","fileContent","getMetadata","index","getWaypoint"],"mappings":";;AAAA,IAAMA,OAAO,GAAG,kBAAhB;AAEA,IAAMC,SAAS,GAAG,yDAAlB;AACA,IAAMC,SAAS,4NAKJF,OALI,yLAAf;AAUA,IAAMG,SAAS,aAAf;;IAGMC,S;;;;;;;;;kCACkB;AAChB,6DAEiBJ,OAFjB,gCAGQA,OAHR,6CAKI,IAAIK,IAAJ,GAAWC,WAAX,EALJ;AAOH;;;gCAEkBC,Q,EAAS;AACxB,oCACIA,QAAQ,CAACC,WAAT,CAAqBC,GADzB,sBACsCF,QAAQ,CAACC,WAAT,CAAqBE,GAD3D,4BAEIH,QAAQ,CAACI,IAFb,eAEsBJ,QAAQ,CAACK,aAF/B,iCAGIL,QAAQ,CAACM,WAHb;AAKH;;;;;;IAGgBC,gB;;;;;;;;;6BACDC,S,EAAU;AACtB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AAClC;AACA,YAAIC,WAAW,GAAGlB,SAAS,GAAGC,SAA9B,CAFkC,CAGlC;;AACAiB,QAAAA,WAAW,IAAIf,SAAS,CAACgB,WAAV,EAAf,CAJkC,CAKlC;;AACA,aAAI,IAAIC,KAAR,IAAiBN,SAAjB,EAA2B;AACvB,cAAIR,QAAQ,GAAGQ,SAAS,CAACM,KAAD,CAAxB;;AACA,cAAGd,QAAQ,CAACC,WAAZ,EAAwB;AACpBW,YAAAA,WAAW,IAAIf,SAAS,CAACkB,WAAV,CAAsBf,QAAtB,CAAf;AACH,WAFD,MAEK;AACDW,YAAAA,MAAM,eAAQX,QAAQ,CAACI,IAAjB,8CAAN;AACH;AACJ,SAbiC,CAclC;;;AACAQ,QAAAA,WAAW,IAAIhB,SAAf;AACAc,QAAAA,OAAO,CAACE,WAAD,CAAP;AACH,OAjBM,CAAP;AAkBH;;;;;;SApBgBL,gB","sourcesContent":["const Creator = 'PlanYourTrip.com'\r\n\r\nconst XmlSchema = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\" ?>'\r\nconst GpxHeader = `\r\n<gpx \r\nxmlns=\"http://www.topografix.com/GPX/1/1\" \r\nxmlns:gpxx=\"http://www.garmin.com/xmlschemas/GpxExtensions/v3\" \r\nxmlns:gpxtpx=\"http://www.garmin.com/xmlschemas/TrackPointExtension/v1\" \r\ncreator=\"${Creator}\" \r\nversion=\"1.1\" \r\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\nxsi:schemaLocation=\"http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd\">`\r\n\r\nconst GpxFooter = `\r\n</gpx>`\r\n\r\nclass GpxHelper {\r\n    static getMetadata(){\r\n        return `\r\n<metadata>\r\n    <link href=\"http://${Creator}\">\r\n        <text>${Creator}</text>\r\n    </link>\r\n    <time>${new Date().toISOString()}</time>\r\n</metadata>`\r\n    }\r\n\r\n    static getWaypoint(location){\r\n        return `\r\n<wpt lat=\"${location.coordinates.lat}\" lon=\"${location.coordinates.lon}\">\r\n    <name>${location.name} [${location.attractivness}]</name>\r\n    <desc>${location.description}</desc>\r\n</wpt>`\r\n    }\r\n}\r\n\r\nexport default class GpxFileGenerator{\r\n    static generate(locations){\r\n        return new Promise((resolve, reject)=>{\r\n            //File headers\r\n            var fileContent = XmlSchema + GpxHeader;\r\n            //File metadata\r\n            fileContent += GpxHelper.getMetadata();\r\n            //Waypoints\r\n            for(let index in locations){\r\n                let location = locations[index];\r\n                if(location.coordinates){\r\n                    fileContent += GpxHelper.getWaypoint(location);\r\n                }else{\r\n                    reject(`The ${location.name} location has incorrect gps coordinates.`);\r\n                }\r\n            }\r\n            //File closure\r\n            fileContent += GpxFooter;\r\n            resolve(fileContent);\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}