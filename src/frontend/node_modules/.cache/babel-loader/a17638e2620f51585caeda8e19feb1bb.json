{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: !0\n}), exports.api = api, exports.pagination = pagination, exports.aggregatePagination = aggregatePagination, exports.aggregate = aggregate, exports.parseContent = parseContent;\n\nvar _crossFetch = require('cross-fetch'),\n    _crossFetch2 = _interopRequireDefault(_crossFetch),\n    _querystring = require('querystring'),\n    _querystring2 = _interopRequireDefault(_querystring);\n\nfunction _interopRequireDefault(a) {\n  return a && a.__esModule ? a : {\n    default: a\n  };\n}\n\nfunction _toConsumableArray(a) {\n  if (Array.isArray(a)) {\n    for (var b = 0, c = Array(a.length); b < a.length; b++) {\n      c[b] = a[b];\n    }\n\n    return c;\n  }\n\n  return Array.from(a);\n}\n\nvar fetchOptions = {\n  method: 'GET',\n  mode: 'cors',\n  credentials: 'omit'\n};\n\nfunction api(a) {\n  var b = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : {},\n      c = Object.assign({\n    format: 'json',\n    action: 'query',\n    redirects: ''\n  }, b);\n  Object.keys(c).forEach(function (f) {\n    c[f] === void 0 && delete c[f];\n  }), a.origin && (c.origin = a.origin);\n\n  var d = a.apiUrl + '?' + _querystring2.default.stringify(c);\n\n  return (0, _crossFetch2.default)(d, Object.assign({\n    headers: a.headers\n  }, fetchOptions)).then(function (f) {\n    return f.json();\n  }).then(function (f) {\n    if (f.error) throw new Error(f.error.info);\n    return f;\n  });\n}\n\nfunction pagination(a, b, c) {\n  return api(a, b).then(function (d) {\n    var f = {\n      results: c(d),\n      query: b.srsearch\n    };\n\n    if (d['continue']) {\n      var g = Object.keys(d['continue']).filter(function (j) {\n        return 'continue' !== j;\n      })[0],\n          h = d['continue'][g];\n      b[g] = h, f.next = function () {\n        return pagination(a, b, c);\n      };\n    }\n\n    return f;\n  });\n}\n\nfunction aggregatePagination(a) {\n  var b = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : [];\n  return a.then(function (c) {\n    var d = [].concat(_toConsumableArray(b), _toConsumableArray(c.results));\n    return c.next ? aggregatePagination(c.next(), d) : d;\n  });\n}\n\nvar pageLimit = 500;\n\nfunction aggregate(a, b, c, d, f) {\n  var g = 5 < arguments.length && void 0 !== arguments[5] ? arguments[5] : [];\n  return b.list = c, b[f + 'limit'] = pageLimit, api(a, b).then(function (h) {\n    var j = [].concat(_toConsumableArray(g), _toConsumableArray(h.query[c].map(function (l) {\n      return l[d];\n    }))),\n        k = h['query-continue'] || h.continue;\n\n    if (k) {\n      var l = k[c] && k[c][f + 'from'] || k[f + 'continue'];\n      return b[f + 'continue'] = l, b[f + 'from'] = l, aggregate(a, b, c, d, f, j);\n    }\n\n    return j;\n  });\n}\n\nvar headingPattern = /(==+)(?:(?!\\n)\\s?)((?:(?!==|\\n)[^])+)(?:(?!\\n)\\s?)(==+)/g;\n\nfunction getHeadings(a) {\n  for (var b = void 0, c = []; null !== (b = headingPattern.exec(a));) {\n    c.push({\n      level: b[1].trim().length,\n      text: b[2].trim(),\n      start: b.index,\n      end: b.index + b[0].length\n    });\n  }\n\n  return c;\n}\n\nfunction parseContent(a) {\n  var b = getHeadings(a),\n      c = Math.min.apply(Math, _toConsumableArray(b.map(function (j) {\n    var k = j.level;\n    return k;\n  }))),\n      d = b.map(function (j, k) {\n    var l = b[k + 1],\n        m = a.substring(j.end, l ? l.start : void 0).trim();\n    return {\n      title: j.text,\n      level: j.level - c,\n      id: k,\n      content: m,\n      items: []\n    };\n  }),\n      f = function lastParentLevel(j, k) {\n    if (0 === k) return null;\n\n    for (var l = j - 1; 0 <= l; l--) {\n      if (d[l].level < k) return d[l].id;\n    }\n\n    return null;\n  };\n\n  d.forEach(function (j, k) {\n    j.parent = f(k, j.level);\n  });\n\n  var g = {\n    items: []\n  },\n      h = function findSection(j) {\n    return d.find(function (k) {\n      return j === k.id;\n    });\n  };\n\n  return d.forEach(function (j) {\n    null === j.parent ? g.items.push(j) : h(j.parent).items.push(j);\n  }), d.forEach(function (j) {\n    delete j.id, delete j.parent, delete j.level, j.items.length || delete j.items;\n  }), g.items;\n}","map":null,"metadata":{},"sourceType":"script"}