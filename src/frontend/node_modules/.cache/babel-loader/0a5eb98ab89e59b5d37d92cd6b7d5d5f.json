{"ast":null,"code":"import _slicedToArray from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\src\\\\components\\\\Lists\\\\ListView.js\";\nimport React, { useEffect, useState } from 'react';\nimport useLoggerService from '../../Services/Diagnostics/LoggerService';\nimport { useLocationsListsState, LocationsListsStateActions } from '../../State/LocationsListsState';\nimport DropDown from './ListViewDropDown';\n\nvar ListView = function ListView() {\n  var _useLocationsListsSta = useLocationsListsState(),\n      _useLocationsListsSta2 = _slicedToArray(_useLocationsListsSta, 2),\n      listState = _useLocationsListsSta2[0],\n      dispatchList = _useLocationsListsSta2[1];\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      lists = _useState2[0],\n      setLists = _useState2[1];\n\n  var logger = useLoggerService();\n  useEffect(function () {\n    fetch(\"http://localhost:50000/lists\").then(function (response) {\n      if (response.status !== 200) {\n        logger.error(\"[ListView] Cannot fetch lists. Error: \".concat(response.statusText, \". Code: \").concat(response.status));\n      } else {\n        response.json().then(function (data) {\n          if (data) {\n            logger.info(\"[ListView] Successfully loaded \".concat(data.length, \" lists\"));\n            storeLocation(data);\n          }\n        });\n      }\n    });\n  }, []);\n\n  var storeLocation = function storeLocation(data) {\n    setLists(data);\n  };\n\n  var selectList = function selectList(listId) {\n    logger.debug(\"Selected list -> Id: \".concat(listId));\n    dispatchList({\n      type: LocationsListsStateActions.selectList,\n      data: listId\n    });\n  };\n\n  var renderLists = function renderLists() {\n    if (lists) return lists.map(function (list) {\n      return React.createElement(\"option\", {\n        className: \"list-view-item\",\n        onClick: function onClick() {\n          return selectList(list.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, list.name);\n    });\n    return '';\n  };\n\n  return React.createElement(\"div\", {\n    className: \"list-view-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(DropDown, {\n    title: \"ddd\",\n    options: listState.lists,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"list-view-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"this is a list description\")), React.createElement(\"div\", {\n    className: \"list-view-details-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"created on:\"), React.createElement(\"div\", {\n    className: \"list-view-details-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"01/01/2000\")), React.createElement(\"div\", {\n    className: \"list-view-details-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"last updated on:\"), React.createElement(\"div\", {\n    className: \"list-view-details-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"01/01/2000\")), React.createElement(\"div\", {\n    className: \"list-view-details-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"number of items:\"), React.createElement(\"div\", {\n    className: \"list-view-details-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"11\")), React.createElement(\"div\", {\n    className: \"list-view-details-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"private:\"), React.createElement(\"div\", {\n    className: \"list-view-details-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"yes\"))));\n};\n\nexport default ListView;","map":{"version":3,"sources":["E:/priv/github/plan-your-trip/src/components/Lists/ListView.js"],"names":["React","useEffect","useState","useLoggerService","useLocationsListsState","LocationsListsStateActions","DropDown","ListView","listState","dispatchList","lists","setLists","logger","fetch","then","response","status","error","statusText","json","data","info","length","storeLocation","selectList","listId","debug","type","renderLists","map","list","id","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport useLoggerService from '../../Services/Diagnostics/LoggerService'\r\nimport { useLocationsListsState, LocationsListsStateActions } from '../../State/LocationsListsState'\r\nimport DropDown from './ListViewDropDown'\r\n\r\nconst ListView = () => {\r\n    const [listState, dispatchList] = useLocationsListsState();\r\n    const [lists, setLists] = useState();\r\n    const logger = useLoggerService();\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:50000/lists`)\r\n            .then(response => {\r\n                if (response.status !== 200) {\r\n                    logger.error(`[ListView] Cannot fetch lists. Error: ${response.statusText}. Code: ${response.status}`)\r\n                }\r\n                else {\r\n                    response.json()\r\n                        .then(data => {\r\n                            if (data) {\r\n                                logger.info(`[ListView] Successfully loaded ${data.length} lists`)\r\n                                storeLocation(data);\r\n                            }\r\n\r\n                        })\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    var storeLocation = (data) => {\r\n        setLists(data);\r\n    }\r\n\r\n    var selectList = (listId) => {\r\n        logger.debug(`Selected list -> Id: ${listId}`)\r\n        dispatchList({type: LocationsListsStateActions.selectList, data: listId});\r\n    }\r\n\r\n    var renderLists = () => {\r\n        if (lists)\r\n            return lists.map((list) => (\r\n                <option className=\"list-view-item\" onClick={()=>selectList(list.id)}>{list.name}</option>\r\n            ))\r\n\r\n        return ''\r\n    }\r\n\r\n    return (\r\n    <div className=\"list-view-container\">\r\n        <div className=\"list-view-details\">\r\n            <div className=\"list-view-details-item\">\r\n            <div className=\"list-view-dropdown\">\r\n                <DropDown title=\"ddd\" options={listState.lists} />\r\n            </div>\r\n            <div className=\"list-view-description\">this is a list description</div>\r\n            </div>\r\n            <div className=\"list-view-details-item\">\r\n                <div className=\"list-view-details-name\">created on:</div>\r\n                <div className=\"list-view-details-data\">01/01/2000</div>\r\n            </div>\r\n            <div className=\"list-view-details-item\">\r\n                <div className=\"list-view-details-name\">last updated on:</div>\r\n                <div className=\"list-view-details-data\">01/01/2000</div>\r\n            </div>\r\n            <div className=\"list-view-details-item\">\r\n                <div className=\"list-view-details-name\">number of items:</div>\r\n                <div className=\"list-view-details-data\">11</div>\r\n            </div>\r\n            <div className=\"list-view-details-item\">\r\n                <div className=\"list-view-details-name\">private:</div>\r\n                <div className=\"list-view-details-data\">yes</div>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default ListView;"]},"metadata":{},"sourceType":"module"}