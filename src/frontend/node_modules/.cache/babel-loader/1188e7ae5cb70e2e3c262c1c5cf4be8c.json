{"ast":null,"code":"import _objectDestructuringEmpty from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectDestructuringEmpty\";\nimport _slicedToArray from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\src\\\\components\\\\Lists\\\\ListView.js\";\nimport React, { useEffect, useState } from 'react';\nimport useLoggerService from '../../Services/Diagnostics/LoggerService';\nimport { useListsState, ListsStateActions } from '../../State/LocationsListsState';\nimport DropDown from './ListViewDropDown';\nimport { useModalState, ModalStateAction, ModalTypes } from '../../State/ModalStateProvider';\nimport { ListViewMenuItem } from './ListViewMenu';\n\nvar ListView = function ListView() {\n  var _useListsState = useListsState(),\n      _useListsState2 = _slicedToArray(_useListsState, 2),\n      listState = _useListsState2[0],\n      dispatchList = _useListsState2[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      lists = _useState2[0],\n      setLists = _useState2[1];\n\n  var logger = useLoggerService();\n\n  var _useModalState = useModalState(),\n      _useModalState2 = _slicedToArray(_useModalState, 2);\n\n  _objectDestructuringEmpty(_useModalState2[0]);\n\n  var dispatchModal = _useModalState2[1];\n  useEffect(function () {\n    fetch(\"http://localhost:50000/lists\").then(function (response) {\n      if (response.status !== 200) {\n        logger.error(\"[ListView] Cannot fetch lists. Error: \".concat(response.statusText, \". Code: \").concat(response.status));\n      } else {\n        response.json().then(function (data) {\n          if (data) {\n            logger.info(\"[ListView] Successfully loaded \".concat(data.length, \" lists\"));\n            storeLocation(data);\n          }\n        });\n      }\n    });\n  }, []);\n\n  var getSelectedList = function getSelectedList() {\n    return listState.lists.filter(function (l) {\n      return l.id == listState.selectedListId;\n    })[0];\n  };\n\n  var storeLocation = function storeLocation(data) {\n    setLists(data);\n    dispatchList({\n      type: ListsStateActions.loadLists,\n      data: data\n    });\n  };\n\n  var selectList = function selectList(listId) {\n    dispatchList({\n      type: ListsStateActions.selectList,\n      data: listId\n    });\n  };\n\n  console.log(getSelectedList());\n  return React.createElement(\"div\", {\n    className: \"list-view-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(DropDown, {\n    selected: getSelectedList(),\n    options: listState.lists,\n    onSelect: function onSelect(id) {\n      dispatchList({\n        type: ListsStateActions.selectList,\n        data: id\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"list-view-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"this is a list description\"))), React.createElement(\"div\", {\n    className: \"list-view-details-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-menu-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(ListViewMenuItem, {\n    icon: ['far', 'plus-square'],\n    title: \"add new location\",\n    action: function action() {\n      return dispatchModal({\n        type: ModalStateAction.show,\n        modalType: ModalTypes.addList,\n        data: {}\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(ListViewMenuItem, {\n    icon: ['far', 'edit'],\n    title: \"edit list\",\n    action: function action() {\n      return dispatchModal({\n        type: ModalStateAction.show,\n        modalType: ModalTypes.editList,\n        data: getSelectedList()\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(ListViewMenuItem, {\n    icon: ['far', 'trash-alt'],\n    title: \"remove list\",\n    action: function action() {\n      return dispatchModal({\n        type: ModalStateAction.show,\n        modalType: ModalTypes.removeList,\n        data: getSelectedList()\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"list-view-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"created on:\"), React.createElement(\"div\", {\n    className: \"list-view-details-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, getSelectedList().created)), React.createElement(\"div\", {\n    className: \"list-view-details-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"last updated on:\"), React.createElement(\"div\", {\n    className: \"list-view-details-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, getSelectedList().updated)), React.createElement(\"div\", {\n    className: \"list-view-details-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"number of items:\"), React.createElement(\"div\", {\n    className: \"list-view-details-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, getSelectedList().locations.count)), React.createElement(\"div\", {\n    className: \"list-view-details-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-view-details-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"private:\"), React.createElement(\"div\", {\n    className: \"list-view-details-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, getSelectedList().private))));\n};\n\nexport default ListView;","map":{"version":3,"sources":["E:/priv/github/plan-your-trip/src/components/Lists/ListView.js"],"names":["React","useEffect","useState","useLoggerService","useListsState","ListsStateActions","DropDown","useModalState","ModalStateAction","ModalTypes","ListViewMenuItem","ListView","listState","dispatchList","lists","setLists","logger","dispatchModal","fetch","then","response","status","error","statusText","json","data","info","length","storeLocation","getSelectedList","filter","l","id","selectedListId","type","loadLists","selectList","listId","console","log","show","modalType","addList","editList","removeList","created","updated","locations","count","private"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport useLoggerService from '../../Services/Diagnostics/LoggerService'\r\nimport { useListsState, ListsStateActions } from '../../State/LocationsListsState'\r\nimport DropDown from './ListViewDropDown'\r\nimport { useModalState, ModalStateAction, ModalTypes } from '../../State/ModalStateProvider'\r\nimport {ListViewMenuItem} from './ListViewMenu'\r\n\r\nconst ListView = () => {\r\n    const [listState, dispatchList] = useListsState();\r\n    const [lists, setLists] = useState([]);\r\n    const logger = useLoggerService();\r\n    const [{}, dispatchModal] = useModalState();\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:50000/lists`)\r\n            .then(response => {\r\n                if (response.status !== 200) {\r\n                    logger.error(`[ListView] Cannot fetch lists. Error: ${response.statusText}. Code: ${response.status}`)\r\n                }\r\n                else {\r\n                    response.json()\r\n                        .then(data => {\r\n                            if (data) {\r\n                                logger.info(`[ListView] Successfully loaded ${data.length} lists`)\r\n                                storeLocation(data);\r\n                            }\r\n\r\n                        })\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    var getSelectedList = () => {\r\n        return listState.lists.filter(l => l.id == listState.selectedListId)[0];\r\n    }\r\n\r\n    var storeLocation = (data) => {\r\n        setLists(data);\r\n        dispatchList({type: ListsStateActions.loadLists, data: data});\r\n    }\r\n\r\n    var selectList = (listId) => {\r\n        dispatchList({type: ListsStateActions.selectList, data: listId});\r\n    }\r\n    console.log(getSelectedList())\r\n    return (\r\n    <div className=\"list-view-container\">\r\n            <div className=\"list-view-details-item\">\r\n                <div className=\"list-view-dropdown\">\r\n                    <DropDown \r\n                        selected={getSelectedList()} \r\n                        options={listState.lists} \r\n                        onSelect={(id)=>{dispatchList({type: ListsStateActions.selectList, data: id})}}/>\r\n                    <div className=\"list-view-description\">this is a list description</div>\r\n                </div>\r\n              \r\n            </div>\r\n\r\n            <div className=\"list-view-details-item\">\r\n            <div className=\"list-view-menu-section\">\r\n                    <ListViewMenuItem icon={['far', 'plus-square']} title=\"add new location\" action={()=>dispatchModal({type: ModalStateAction.show, modalType: ModalTypes.addList, data: {}})} />\r\n                    <ListViewMenuItem icon={['far', 'edit']} title=\"edit list\" action={()=>dispatchModal({type: ModalStateAction.show, modalType: ModalTypes.editList, data: getSelectedList()})} />\r\n                    <ListViewMenuItem icon={['far', 'trash-alt']} title=\"remove list\" action={()=>dispatchModal({type: ModalStateAction.show, modalType: ModalTypes.removeList, data: getSelectedList()})} />\r\n                </div>\r\n                </div>\r\n\r\n                <div className=\"list-view-details\">\r\n            <div className=\"list-view-details-item\">\r\n                <div className=\"list-view-details-name\">created on:</div>\r\n                <div className=\"list-view-details-data\">{getSelectedList().created}</div>    \r\n            </div>\r\n            <div className=\"list-view-details-item\">\r\n                <div className=\"list-view-details-name\">last updated on:</div>\r\n                <div className=\"list-view-details-data\">{getSelectedList().updated}</div>\r\n            </div>\r\n            <div className=\"list-view-details-item\">\r\n                <div className=\"list-view-details-name\">number of items:</div>\r\n                <div className=\"list-view-details-data\">{getSelectedList().locations.count}</div>\r\n            </div>\r\n            <div className=\"list-view-details-item\">\r\n                <div className=\"list-view-details-name\">private:</div>\r\n                <div className=\"list-view-details-data\">{getSelectedList().private}</div>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default ListView;"]},"metadata":{},"sourceType":"module"}