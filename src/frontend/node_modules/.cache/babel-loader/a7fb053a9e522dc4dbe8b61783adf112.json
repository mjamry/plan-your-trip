{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: !0\n});\n\nvar _slicedToArray = function () {\n  function c(d, e) {\n    var f = [],\n        g = !0,\n        h = !1,\n        j = void 0;\n\n    try {\n      for (var l, k = d[Symbol.iterator](); !(g = (l = k.next()).done) && (f.push(l.value), !(e && f.length === e)); g = !0) {\n        ;\n      }\n    } catch (m) {\n      h = !0, j = m;\n    } finally {\n      try {\n        !g && k['return'] && k['return']();\n      } finally {\n        if (h) throw j;\n      }\n    }\n\n    return f;\n  }\n\n  return function (d, e) {\n    if (Array.isArray(d)) return d;\n    if (Symbol.iterator in Object(d)) return c(d, e);\n    throw new TypeError('Invalid attempt to destructure non-iterable instance');\n  };\n}(),\n    _typeof = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function (c) {\n  return typeof c;\n} : function (c) {\n  return c && 'function' == typeof Symbol && c.constructor === Symbol && c !== Symbol.prototype ? 'symbol' : typeof c;\n};\n\nexports.default = wikiPage;\n\nvar _util = require('./util'),\n    _infoboxParser = require('infobox-parser'),\n    _infoboxParser2 = _interopRequireDefault(_infoboxParser),\n    _coordinates = require('./coordinates');\n\nfunction _interopRequireDefault(c) {\n  return c && c.__esModule ? c : {\n    default: c\n  };\n}\n\nfunction _toConsumableArray(c) {\n  if (Array.isArray(c)) {\n    for (var d = 0, e = Array(c.length); d < c.length; d++) {\n      e[d] = c[d];\n    }\n\n    return e;\n  }\n\n  return Array.from(c);\n}\n\nvar get = function get(c, d) {\n  for (var e = arguments.length, f = Array(2 < e ? e - 2 : 0), g = 2; g < e; g++) {\n    f[g - 2] = arguments[g];\n  }\n\n  return void 0 === c || void 0 === d ? c : 'function' == typeof d ? get.apply(void 0, [d(c)].concat(f)) : get.apply(void 0, [c[d]].concat(f));\n},\n    firstValue = function firstValue(c) {\n  return 'object' === ('undefined' == typeof c ? 'undefined' : _typeof(c)) ? c[Object.keys(c)[0]] : c[0];\n},\n    getFileName = function getFileName(c) {\n  if (Array.isArray(c) && (c = c[0]), !!c) {\n    if (-1 !== c.indexOf(':')) {\n      var d = c.split(':'),\n          e = _slicedToArray(d, 2),\n          f = e[1];\n\n      return f;\n    }\n\n    return c;\n  }\n};\n\nfunction wikiPage(c, d) {\n  function f() {\n    return g().then(_util.parseContent);\n  }\n\n  function g() {\n    return (0, _util.api)(d, {\n      prop: 'extracts',\n      explaintext: '',\n      titles: x.title\n    }).then(function (z) {\n      return z.query.pages[x.pageid].extract;\n    });\n  }\n\n  function j() {\n    return (0, _util.api)(d, {\n      generator: 'images',\n      gimlimit: 'max',\n      prop: 'imageinfo',\n      iiprop: 'url',\n      titles: x.title\n    }).then(function (z) {\n      return z.query ? Object.keys(z.query.pages).map(function (A) {\n        return z.query.pages[A];\n      }) : [];\n    });\n  }\n\n  function q(z) {\n    return (0, _util.api)(d, {\n      prop: 'revisions',\n      rvprop: 'content',\n      rvsection: 0,\n      titles: z || x.title\n    }).then(function (A) {\n      return get(A, 'query', 'pages', firstValue, 'revisions', 0, '*');\n    });\n  }\n\n  function s(z) {\n    return q().then(function (A) {\n      var B = (0, _infoboxParser2.default)(A, d.parser).general;\n      return 0 === Object.keys(B).length ? q('Template:Infobox ' + x.title.toLowerCase()).then(function (C) {\n        return (0, _infoboxParser2.default)(C || '', d.parser).general;\n      }) : B;\n    }).then(function (A) {\n      return z ? A.hasOwnProperty(z) ? A[z] : void 0 : A;\n    });\n  }\n\n  var x = c;\n  return {\n    raw: x,\n    html: function html() {\n      return (0, _util.api)(d, {\n        prop: 'revisions',\n        rvprop: 'content',\n        rvlimit: 1,\n        rvparse: '',\n        titles: x.title\n      }).then(function (z) {\n        return z.query.pages[x.pageid].revisions[0]['*'];\n      });\n    },\n    rawContent: g,\n    content: f,\n    sections: f,\n    summary: function summary() {\n      return (0, _util.api)(d, {\n        prop: 'extracts',\n        explaintext: '',\n        exintro: '',\n        titles: x.title\n      }).then(function (z) {\n        return z.query.pages[x.pageid].extract;\n      });\n    },\n    images: function images() {\n      return j().then(function (z) {\n        return z.map(function (A) {\n          return A.imageinfo;\n        }).reduce(function (A, B) {\n          return [].concat(_toConsumableArray(A), _toConsumableArray(B));\n        }, []).map(function (A) {\n          return A.url;\n        });\n      });\n    },\n    references: function references() {\n      return (0, _util.api)(d, {\n        prop: 'extlinks',\n        ellimit: 'max',\n        titles: x.title\n      }).then(function (z) {\n        return z.query.pages[x.pageid].extlinks.map(function (A) {\n          return A['*'];\n        });\n      });\n    },\n    links: function links() {\n      var z = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : !0,\n          A = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 100,\n          B = (0, _util.pagination)(d, {\n        prop: 'links',\n        plnamespace: 0,\n        pllimit: A,\n        titles: x.title\n      }, function (C) {\n        return C.query.pages[x.pageid].links.map(function (D) {\n          return D.title;\n        });\n      });\n      return z ? (0, _util.aggregatePagination)(B) : B;\n    },\n    categories: function categories() {\n      var z = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : !0,\n          A = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 100,\n          B = (0, _util.pagination)(d, {\n        prop: 'categories',\n        pllimit: A,\n        titles: x.title\n      }, function (C) {\n        return C.query.pages[x.pageid].categories.map(function (D) {\n          return D.title;\n        });\n      });\n      return z ? (0, _util.aggregatePagination)(B) : B;\n    },\n    coordinates: function coordinates() {\n      return (0, _util.api)(d, {\n        prop: 'coordinates',\n        titles: x.title\n      }).then(function (z) {\n        var A = z.query.pages[x.pageid];\n        return A.coordinates ? A.coordinates[0] : s().then(function (B) {\n          return (0, _coordinates.parseCoordinates)(B);\n        });\n      });\n    },\n    info: s,\n    backlinks: function backlinks() {\n      var z = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : !0,\n          A = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 100,\n          B = (0, _util.pagination)(d, {\n        list: 'backlinks',\n        bllimit: A,\n        bltitle: x.title\n      }, function (C) {\n        return C.query.backlinks.map(function (D) {\n          return D.title;\n        });\n      });\n      return z ? (0, _util.aggregatePagination)(B) : B;\n    },\n    rawImages: j,\n    mainImage: function mainImage() {\n      return Promise.all([j(), s()]).then(function (z) {\n        var A = _slicedToArray(z, 2),\n            B = A[0],\n            C = A[1],\n            D = getFileName(C.image || C.bildname || C.imagen || C.Immagine || C.badge || C.logo);\n\n        if (!D) return q().then(function (F) {\n          if (B.length) {\n            B.sort(function (H, I) {\n              return F.indexOf(I.title) - F.indexOf(H.title);\n            });\n            var G = B[0];\n            return 0 < G.imageinfo.length ? G.imageinfo[0].url : void 0;\n          }\n        });\n        var E = B.find(function (F) {\n          var G = F.title,\n              H = getFileName(G);\n          return H === D || H.replace(/\\s/g, '_') === D;\n        });\n        return E && 0 < E.imageinfo.length ? E.imageinfo[0].url : void 0;\n      });\n    },\n    langlinks: function langlinks() {\n      return (0, _util.api)(d, {\n        prop: 'langlinks',\n        lllimit: 'max',\n        titles: x.title\n      }).then(function (z) {\n        return z.query.pages[x.pageid].langlinks.map(function (A) {\n          return {\n            lang: A.lang,\n            title: A['*']\n          };\n        });\n      });\n    },\n    rawInfo: q,\n    fullInfo: function fullInfo() {\n      return q().then(function (z) {\n        return (0, _infoboxParser2.default)(z, d.parser);\n      });\n    },\n    tables: function tables() {\n      return (0, _util.api)(d, {\n        prop: 'revisions',\n        rvprop: 'content',\n        titles: x.title\n      }).then(function (z) {\n        return get(z, 'query', 'pages', firstValue, 'revisions', 0, '*');\n      }).then(function (z) {\n        return (0, _infoboxParser2.default)(z, d.parser).tables;\n      });\n    },\n    url: function url() {\n      return x.canonicalurl;\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"script"}