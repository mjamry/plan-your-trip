{"ast":null,"code":"import _slicedToArray from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\src\\\\components\\\\modals\\\\ModalContainer.js\";\nimport React, { useState, useEffect } from 'react';\nimport Modal from './Modal';\nimport { useModalState, ModalTypes, ModalStateAction } from '../../State/ModalStateProvider';\nimport { useLocationFormBuilder } from './LocationDetailsForm/LocationDetailsForm';\nimport ModalHeader from './ModalHeader';\nimport Search from '../Search/Search';\nimport AddNewLocationSelect from './AddNewLocationSelect';\nimport Confirmation from './Confirmation';\nimport LoadingIndicator from './LoadingIndicator';\nimport useLocationService from '../../Services/LocationService';\nimport useLoggerService from '../../Services/Diagnostics/LoggerService';\nimport useListService from '../../Services/ListService';\nimport useListFormBuilder from '../../components/modals/ListDetailsForm';\nvar _emptyModalContent = {\n  header: \"\",\n  body: \"\",\n  footer: \"\",\n  state: \"\"\n};\n\nvar useModalContentFactory = function useModalContentFactory() {\n  var _useModalState = useModalState(),\n      _useModalState2 = _slicedToArray(_useModalState, 2),\n      modalModel = _useModalState2[0],\n      dispatchModal = _useModalState2[1];\n\n  var locationService = useLocationService();\n  var listService = useListService();\n  var logger = useLoggerService();\n\n  var create = function create(modalType) {\n    var locationFormBuilder = useLocationFormBuilder();\n    var listFormBuilder = useListFormBuilder();\n\n    switch (modalType) {\n      case ModalTypes.addLocation:\n        return locationFormBuilder({\n          title: \"Add location\",\n          location: modalModel.data,\n          onSubmit: function onSubmit(data) {\n            locationService.add(data);\n            dispatchModal({\n              type: ModalStateAction.hide\n            });\n          }\n        });\n\n      case ModalTypes.editLocation:\n        return locationFormBuilder({\n          title: \"Edit location\",\n          location: modalModel.data,\n          onSubmit: function onSubmit(data) {\n            locationService.edit(data);\n            dispatchModal({\n              type: ModalStateAction.hide\n            });\n          }\n        });\n\n      case ModalTypes.removeLocation:\n        var submitAction = function submitAction() {\n          locationService.remove(modalModel.data);\n          dispatchModal({\n            type: ModalStateAction.hide\n          });\n        };\n\n        return {\n          header: React.createElement(ModalHeader, {\n            title: \"Do you want to remove\\n\\r \\\"\".concat(modalModel.data.name, \"\\\"\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }),\n          body: React.createElement(Confirmation, {\n            onSubmit: function onSubmit() {\n              return submitAction(modalModel.data);\n            },\n            onCancel: function onCancel() {\n              return dispatchModal({\n                type: ModalStateAction.hide\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }),\n          footer: null\n        };\n\n      case ModalTypes.search:\n        return {\n          header: React.createElement(ModalHeader, {\n            title: \"Search location\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }),\n          body: React.createElement(Search, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }),\n          footer: null\n        };\n\n      case ModalTypes.addNewLocationSelect:\n        return {\n          header: React.createElement(ModalHeader, {\n            title: \"Select option\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }),\n          body: React.createElement(AddNewLocationSelect, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }),\n          footer: null\n        };\n\n      case ModalTypes.loading:\n        return {\n          header: React.createElement(ModalHeader, {\n            title: \"Loading...\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }),\n          body: React.createElement(LoadingIndicator, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }),\n          footer: null\n        };\n\n      case ModalTypes.addList:\n        return listFormBuilder({\n          title: \"Add list\",\n          list: modalModel.data,\n          onSubmit: function onSubmit(data) {\n            listService.add(data);\n            dispatchModal({\n              type: ModalStateAction.hide\n            });\n          }\n        });\n\n      case ModalTypes.editList:\n        return listFormBuilder({\n          title: \"Edit list\",\n          list: modalModel.data,\n          onSubmit: function onSubmit(data) {\n            listService.edit(data);\n            dispatchModal({\n              type: ModalStateAction.hide\n            });\n          }\n        });\n\n      case ModalTypes.removeList:\n        var submitAction = function submitAction() {\n          listService.remove(modalModel.data);\n          dispatchModal({\n            type: ModalStateAction.hide\n          });\n        };\n\n        return {\n          header: React.createElement(ModalHeader, {\n            title: \"Do you want to remove\\n\\r \\\"\".concat(modalModel.data.name, \"\\\"\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }),\n          body: React.createElement(Confirmation, {\n            onSubmit: function onSubmit() {\n              return submitAction(modalModel.data);\n            },\n            onCancel: function onCancel() {\n              return dispatchModal({\n                type: ModalStateAction.hide\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }),\n          footer: null\n        };\n\n      default:\n        logger.debug(\"[ModalFactory] Incorrect modal type: \\\"\".concat(modalType, \"\\\"\"));\n        return _emptyModalContent;\n    }\n  };\n\n  return create;\n};\n\nvar ModalContainer = function ModalContainer() {\n  var _useState = useState(_emptyModalContent),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalContent = _useState2[0],\n      setModalContent = _useState2[1];\n\n  var _useModalState3 = useModalState(),\n      _useModalState4 = _slicedToArray(_useModalState3, 1),\n      modalModel = _useModalState4[0];\n\n  var factory = useModalContentFactory();\n\n  var renderModal = function renderModal() {\n    var render = function render(ModalState) {\n      if (ModalState) {\n        return React.createElement(ModalState, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(Modal, {\n          isVisible: modalModel.isVisible,\n          header: modalContent.header,\n          body: modalContent.body,\n          footer: modalContent.footer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Modal, {\n          isVisible: modalModel.isVisible,\n          header: modalContent.header,\n          body: modalContent.body,\n          footer: modalContent.footer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        });\n      }\n    };\n\n    return render(modalContent.state);\n  };\n\n  useEffect(function () {\n    setModalContent(factory(modalModel.type));\n  }, [modalModel]);\n  return renderModal();\n};\n\nexport default ModalContainer;","map":{"version":3,"sources":["E:/priv/github/plan-your-trip/src/components/modals/ModalContainer.js"],"names":["React","useState","useEffect","Modal","useModalState","ModalTypes","ModalStateAction","useLocationFormBuilder","ModalHeader","Search","AddNewLocationSelect","Confirmation","LoadingIndicator","useLocationService","useLoggerService","useListService","useListFormBuilder","_emptyModalContent","header","body","footer","state","useModalContentFactory","modalModel","dispatchModal","locationService","listService","logger","create","modalType","locationFormBuilder","listFormBuilder","addLocation","title","location","data","onSubmit","add","type","hide","editLocation","edit","removeLocation","submitAction","remove","name","search","addNewLocationSelect","loading","addList","list","editList","removeList","debug","ModalContainer","modalContent","setModalContent","factory","renderModal","render","ModalState","isVisible"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,gBAApC,QAA4D,gCAA5D;AACA,SAASC,sBAAT,QAAuC,2CAAvC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,gBAAP,MAA6B,0CAA7B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,kBAAP,MAA+B,yCAA/B;AAEA,IAAMC,kBAAkB,GAAG;AAACC,EAAAA,MAAM,EAAE,EAAT;AAAaC,EAAAA,IAAI,EAAE,EAAnB;AAAuBC,EAAAA,MAAM,EAAE,EAA/B;AAAmCC,EAAAA,KAAK,EAAE;AAA1C,CAA3B;;AAEA,IAAIC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AAAA,uBACKlB,aAAa,EADlB;AAAA;AAAA,MACxBmB,UADwB;AAAA,MACZC,aADY;;AAE/B,MAAMC,eAAe,GAAGZ,kBAAkB,EAA1C;AACA,MAAMa,WAAW,GAAGX,cAAc,EAAlC;AACA,MAAIY,MAAM,GAAGb,gBAAgB,EAA7B;;AAEA,MAAIc,MAAM,GAAG,SAATA,MAAS,CAACC,SAAD,EAAe;AACxB,QAAIC,mBAAmB,GAAGvB,sBAAsB,EAAhD;AACA,QAAIwB,eAAe,GAAGf,kBAAkB,EAAxC;;AAEA,YAAOa,SAAP;AACI,WAAKxB,UAAU,CAAC2B,WAAhB;AACI,eAAOF,mBAAmB,CACtB;AACIG,UAAAA,KAAK,EAAE,cADX;AAEIC,UAAAA,QAAQ,EAAEX,UAAU,CAACY,IAFzB;AAGIC,UAAAA,QAAQ,EAAE,kBAACD,IAAD,EAAQ;AACdV,YAAAA,eAAe,CAACY,GAAhB,CAAoBF,IAApB;AACAX,YAAAA,aAAa,CAAC;AACVc,cAAAA,IAAI,EAAEhC,gBAAgB,CAACiC;AADb,aAAD,CAAb;AACkC;AAN1C,SADsB,CAA1B;;AAWJ,WAAKlC,UAAU,CAACmC,YAAhB;AACI,eAAOV,mBAAmB,CACtB;AACIG,UAAAA,KAAK,EAAE,eADX;AAEIC,UAAAA,QAAQ,EAAEX,UAAU,CAACY,IAFzB;AAGIC,UAAAA,QAAQ,EAAE,kBAACD,IAAD,EAAQ;AACVV,YAAAA,eAAe,CAACgB,IAAhB,CAAqBN,IAArB;AACAX,YAAAA,aAAa,CAAC;AACVc,cAAAA,IAAI,EAAEhC,gBAAgB,CAACiC;AADb,aAAD,CAAb;AAEH;AAPT,SADsB,CAA1B;;AAYJ,WAAKlC,UAAU,CAACqC,cAAhB;AACI,YAAIC,YAAY,GAAG,wBAAI;AACnBlB,UAAAA,eAAe,CAACmB,MAAhB,CAAuBrB,UAAU,CAACY,IAAlC;AACAX,UAAAA,aAAa,CAAC;AAACc,YAAAA,IAAI,EAAEhC,gBAAgB,CAACiC;AAAxB,WAAD,CAAb;AAA6C,SAFjD;;AAIA,eAAO;AACHrB,UAAAA,MAAM,EAAE,oBAAC,WAAD;AAAa,YAAA,KAAK,wCAAgCK,UAAU,CAACY,IAAX,CAAgBU,IAAhD,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAEH1B,UAAAA,IAAI,EAAE,oBAAC,YAAD;AACF,YAAA,QAAQ,EAAE;AAAA,qBAAIwB,YAAY,CAACpB,UAAU,CAACY,IAAZ,CAAhB;AAAA,aADR;AAEF,YAAA,QAAQ,EAAE;AAAA,qBAAIX,aAAa,CAAC;AAACc,gBAAAA,IAAI,EAAEhC,gBAAgB,CAACiC;AAAxB,eAAD,CAAjB;AAAA,aAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH;AAKHnB,UAAAA,MAAM,EAAE;AALL,SAAP;;AAQJ,WAAKf,UAAU,CAACyC,MAAhB;AACI,eAAO;AACH5B,UAAAA,MAAM,EAAE,oBAAC,WAAD;AAAa,YAAA,KAAK,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAEHC,UAAAA,IAAI,EAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH;AAGHC,UAAAA,MAAM,EAAE;AAHL,SAAP;;AAMJ,WAAKf,UAAU,CAAC0C,oBAAhB;AACI,eAAO;AACH7B,UAAAA,MAAM,EAAE,oBAAC,WAAD;AAAa,YAAA,KAAK,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAEHC,UAAAA,IAAI,EAAE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH;AAGHC,UAAAA,MAAM,EAAE;AAHL,SAAP;;AAMJ,WAAKf,UAAU,CAAC2C,OAAhB;AACI,eAAO;AACH9B,UAAAA,MAAM,EAAE,oBAAC,WAAD;AAAa,YAAA,KAAK,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAEHC,UAAAA,IAAI,EAAE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH;AAGHC,UAAAA,MAAM,EAAE;AAHL,SAAP;;AAMJ,WAAKf,UAAU,CAAC4C,OAAhB;AACI,eAAOlB,eAAe,CAClB;AACIE,UAAAA,KAAK,EAAE,UADX;AAEIiB,UAAAA,IAAI,EAAE3B,UAAU,CAACY,IAFrB;AAGIC,UAAAA,QAAQ,EAAE,kBAACD,IAAD,EAAQ;AACVT,YAAAA,WAAW,CAACW,GAAZ,CAAgBF,IAAhB;AACAX,YAAAA,aAAa,CAAC;AACVc,cAAAA,IAAI,EAAEhC,gBAAgB,CAACiC;AADb,aAAD,CAAb;AAEH;AAPT,SADkB,CAAtB;;AAWJ,WAAKlC,UAAU,CAAC8C,QAAhB;AACI,eAAOpB,eAAe,CAClB;AACIE,UAAAA,KAAK,EAAE,WADX;AAEIiB,UAAAA,IAAI,EAAE3B,UAAU,CAACY,IAFrB;AAGIC,UAAAA,QAAQ,EAAE,kBAACD,IAAD,EAAQ;AACVT,YAAAA,WAAW,CAACe,IAAZ,CAAiBN,IAAjB;AACAX,YAAAA,aAAa,CAAC;AACVc,cAAAA,IAAI,EAAEhC,gBAAgB,CAACiC;AADb,aAAD,CAAb;AAEH;AAPT,SADkB,CAAtB;;AAWJ,WAAKlC,UAAU,CAAC+C,UAAhB;AACI,YAAIT,YAAY,GAAG,wBAAI;AACnBjB,UAAAA,WAAW,CAACkB,MAAZ,CAAmBrB,UAAU,CAACY,IAA9B;AACAX,UAAAA,aAAa,CAAC;AAACc,YAAAA,IAAI,EAAEhC,gBAAgB,CAACiC;AAAxB,WAAD,CAAb;AAA6C,SAFjD;;AAIA,eAAO;AACHrB,UAAAA,MAAM,EAAE,oBAAC,WAAD;AAAa,YAAA,KAAK,wCAAgCK,UAAU,CAACY,IAAX,CAAgBU,IAAhD,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAEH1B,UAAAA,IAAI,EAAE,oBAAC,YAAD;AACF,YAAA,QAAQ,EAAE;AAAA,qBAAIwB,YAAY,CAACpB,UAAU,CAACY,IAAZ,CAAhB;AAAA,aADR;AAEF,YAAA,QAAQ,EAAE;AAAA,qBAAIX,aAAa,CAAC;AAACc,gBAAAA,IAAI,EAAEhC,gBAAgB,CAACiC;AAAxB,eAAD,CAAjB;AAAA,aAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH;AAKHnB,UAAAA,MAAM,EAAE;AALL,SAAP;;AAQR;AACIO,QAAAA,MAAM,CAAC0B,KAAP,kDAAsDxB,SAAtD;AACA,eAAOZ,kBAAP;AAnGJ;AAoGF,GAxGF;;AA0GA,SAAOW,MAAP;AACH,CAjHD;;AAmHA,IAAI0B,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,kBACiBrD,QAAQ,CAACgB,kBAAD,CADzB;AAAA;AAAA,MAChBsC,YADgB;AAAA,MACFC,eADE;;AAAA,wBAEFpD,aAAa,EAFX;AAAA;AAAA,MAEhBmB,UAFgB;;AAGvB,MAAMkC,OAAO,GAAGnC,sBAAsB,EAAtC;;AAEA,MAAIoC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACpB,QAAIC,MAAM,GAAG,SAATA,MAAS,CAACC,UAAD,EAAgB;AACzB,UAAGA,UAAH,EAAe;AACX,eAAQ,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD;AACI,UAAA,SAAS,EAAErC,UAAU,CAACsC,SAD1B;AAEI,UAAA,MAAM,EAAEN,YAAY,CAACrC,MAFzB;AAGI,UAAA,IAAI,EAAEqC,YAAY,CAACpC,IAHvB;AAII,UAAA,MAAM,EAAEoC,YAAY,CAACnC,MAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAAR;AAMsB,OAP1B,MAQK;AACD,eAAO,oBAAC,KAAD;AACH,UAAA,SAAS,EAAEG,UAAU,CAACsC,SADnB;AAEH,UAAA,MAAM,EAAEN,YAAY,CAACrC,MAFlB;AAGH,UAAA,IAAI,EAAEqC,YAAY,CAACpC,IAHhB;AAIH,UAAA,MAAM,EAAEoC,YAAY,CAACnC,MAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH;AACJ,KAhBD;;AAkBA,WAAOuC,MAAM,CAACJ,YAAY,CAAClC,KAAd,CAAb;AACH,GApBD;;AAsBAnB,EAAAA,SAAS,CAAC,YAAI;AACVsD,IAAAA,eAAe,CAACC,OAAO,CAAClC,UAAU,CAACe,IAAZ,CAAR,CAAf;AACH,GAFQ,EAEN,CAACf,UAAD,CAFM,CAAT;AAIA,SAAOmC,WAAW,EAAlB;AACH,CAhCD;;AAkCA,eAAeJ,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Modal from './Modal'\r\nimport { useModalState, ModalTypes, ModalStateAction } from '../../State/ModalStateProvider'\r\nimport { useLocationFormBuilder } from './LocationDetailsForm/LocationDetailsForm'\r\nimport ModalHeader from './ModalHeader'\r\nimport Search from '../Search/Search'\r\nimport AddNewLocationSelect from './AddNewLocationSelect'\r\nimport Confirmation from './Confirmation'\r\nimport LoadingIndicator from './LoadingIndicator'\r\nimport useLocationService from '../../Services/LocationService'\r\nimport useLoggerService from '../../Services/Diagnostics/LoggerService'\r\nimport useListService from '../../Services/ListService'\r\nimport useListFormBuilder from '../../components/modals/ListDetailsForm'\r\n\r\nconst _emptyModalContent = {header: \"\", body: \"\", footer: \"\", state: \"\"};\r\n\r\nvar useModalContentFactory = () => {\r\n    const [modalModel, dispatchModal] = useModalState();\r\n    const locationService = useLocationService();\r\n    const listService = useListService();\r\n    var logger = useLoggerService();\r\n\r\n    var create = (modalType) => {\r\n        var locationFormBuilder = useLocationFormBuilder();\r\n        var listFormBuilder = useListFormBuilder();\r\n\r\n        switch(modalType){\r\n            case ModalTypes.addLocation:\r\n                return locationFormBuilder(\r\n                    {\r\n                        title: \"Add location\",\r\n                        location: modalModel.data,\r\n                        onSubmit: (data)=>{\r\n                            locationService.add(data)\r\n                            dispatchModal({\r\n                                type: ModalStateAction.hide})}\r\n                    }\r\n                )\r\n                \r\n            case ModalTypes.editLocation:\r\n                return locationFormBuilder(\r\n                    {\r\n                        title: \"Edit location\",\r\n                        location: modalModel.data,\r\n                        onSubmit: (data)=>{\r\n                                locationService.edit(data)\r\n                                dispatchModal({\r\n                                    type: ModalStateAction.hide})\r\n                            }\r\n                    }\r\n                )\r\n\r\n            case ModalTypes.removeLocation:\r\n                var submitAction = ()=>{\r\n                    locationService.remove(modalModel.data)\r\n                    dispatchModal({type: ModalStateAction.hide})};\r\n\r\n                return {\r\n                    header: <ModalHeader title={`Do you want to remove\\n\\r \"${modalModel.data.name}\"`}/>,\r\n                    body: <Confirmation \r\n                        onSubmit={()=>submitAction(modalModel.data)}\r\n                        onCancel={()=>dispatchModal({type: ModalStateAction.hide})}/>,\r\n                    footer: null\r\n                }\r\n                    \r\n            case ModalTypes.search: \r\n                return {\r\n                    header: <ModalHeader title=\"Search location\"/>,\r\n                    body: <Search />,\r\n                    footer: null\r\n                }\r\n\r\n            case ModalTypes.addNewLocationSelect:\r\n                return {\r\n                    header: <ModalHeader title=\"Select option\"/>,\r\n                    body: <AddNewLocationSelect />,\r\n                    footer: null\r\n                }\r\n\r\n            case ModalTypes.loading:\r\n                return {\r\n                    header: <ModalHeader title=\"Loading...\" />,\r\n                    body: <LoadingIndicator />,\r\n                    footer: null\r\n                }\r\n\r\n            case ModalTypes.addList: \r\n                return listFormBuilder(\r\n                    {\r\n                        title: \"Add list\",\r\n                        list: modalModel.data,\r\n                        onSubmit: (data)=>{\r\n                                listService.add(data)\r\n                                dispatchModal({\r\n                                    type: ModalStateAction.hide})\r\n                            }\r\n                    }\r\n                )\r\n            case ModalTypes.editList:\r\n                return listFormBuilder(\r\n                    {\r\n                        title: \"Edit list\",\r\n                        list: modalModel.data,\r\n                        onSubmit: (data)=>{\r\n                                listService.edit(data)\r\n                                dispatchModal({\r\n                                    type: ModalStateAction.hide})\r\n                            }\r\n                    }\r\n                )\r\n            case ModalTypes.removeList:\r\n                var submitAction = ()=>{\r\n                    listService.remove(modalModel.data)\r\n                    dispatchModal({type: ModalStateAction.hide})};\r\n\r\n                return {\r\n                    header: <ModalHeader title={`Do you want to remove\\n\\r \"${modalModel.data.name}\"`}/>,\r\n                    body: <Confirmation \r\n                        onSubmit={()=>submitAction(modalModel.data)}\r\n                        onCancel={()=>dispatchModal({type: ModalStateAction.hide})}/>,\r\n                    footer: null\r\n                }\r\n\r\n        default: \r\n            logger.debug(`[ModalFactory] Incorrect modal type: \"${modalType}\"`);\r\n            return _emptyModalContent;\r\n    }}\r\n    \r\n    return create;\r\n}\r\n\r\nvar ModalContainer = () => {\r\n    const [modalContent, setModalContent] = useState(_emptyModalContent);\r\n    const [modalModel] = useModalState();\r\n    const factory = useModalContentFactory();\r\n\r\n    var renderModal = () => {\r\n        var render = (ModalState) => {\r\n            if(ModalState) {\r\n                return  <ModalState>\r\n                            <Modal \r\n                                isVisible={modalModel.isVisible} \r\n                                header={modalContent.header}\r\n                                body={modalContent.body}\r\n                                footer={modalContent.footer}/>\r\n                        </ModalState>}\r\n            else {\r\n                return <Modal \r\n                    isVisible={modalModel.isVisible} \r\n                    header={modalContent.header}\r\n                    body={modalContent.body}\r\n                    footer={modalContent.footer}/>\r\n            }\r\n        }\r\n\r\n        return render(modalContent.state);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setModalContent(factory(modalModel.type));\r\n    }, [modalModel])\r\n\r\n    return renderModal();\r\n}\r\n\r\nexport default ModalContainer\r\n"]},"metadata":{},"sourceType":"module"}