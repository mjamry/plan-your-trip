{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectDestructuringEmpty\";\nimport _slicedToArray from \"E:\\\\priv\\\\github\\\\plan-your-trip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useLocationsState, LocationsStateActions } from '../State/LocationsState';\nimport useNotificationService from '../Services/NotificationService';\nimport useDbPersistenceService from './DbPersistentLocationService';\n\nvar useLocationService = function useLocationService() {\n  var _useLocationsState = useLocationsState(),\n      _useLocationsState2 = _slicedToArray(_useLocationsState, 2);\n\n  _objectDestructuringEmpty(_useLocationsState2[0]);\n\n  var dispatchLocations = _useLocationsState2[1];\n  var notificationService = useNotificationService();\n  var dbPersistentLocationService = useDbPersistenceService();\n\n  var setLoading = function setLoading() {\n    dispatchLocations({\n      type: LocationsStateActions.isLoading,\n      data: true\n    });\n  };\n\n  var clearLoading = function clearLoading() {\n    dispatchLocations({\n      type: LocationsStateActions.isLoading,\n      data: false\n    });\n  };\n\n  var add =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(location) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading();\n              _context.prev = 1;\n              _context.next = 4;\n              return dbPersistentLocationService.add(location);\n\n            case 4:\n              dispatchLocations({\n                type: LocationsStateActions.addLocation,\n                data: location\n              });\n              notificationService.success(\"New location added: \".concat(location.name));\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              notificationService.error(\"Error while adding location: \".concat(location.name));\n\n            case 11:\n              _context.prev = 11;\n              clearLoading();\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8, 11, 14]]);\n    }));\n\n    return function add(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var edit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(location) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoading();\n              _context2.prev = 1;\n              _context2.next = 4;\n              return dbPersistentLocationService.edit(location);\n\n            case 4:\n              dispatchLocations({\n                type: LocationsStateActions.editLocation,\n                data: location\n              });\n              notificationService.success(\"Location modified: \".concat(location.name));\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              notificationService.error(\"Error while editing location: \".concat(location.name));\n\n            case 11:\n              _context2.prev = 11;\n              clearLoading();\n              return _context2.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8, 11, 14]]);\n    }));\n\n    return function edit(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var remove =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(location) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setLoading();\n              _context3.prev = 1;\n              _context3.next = 4;\n              return dbPersistentLocationService.remove(location);\n\n            case 4:\n              dispatchLocations({\n                type: LocationsStateActions.removeLocation,\n                data: location\n              });\n              notificationService.success(\"Location removed: \".concat(location.name));\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              notificationService.error(\"Error while removing location: \".concat(location.name));\n\n            case 11:\n              _context3.prev = 11;\n              clearLoading();\n              return _context3.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 8, 11, 14]]);\n    }));\n\n    return function remove(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return {\n    add: add,\n    edit: edit,\n    remove: remove\n  };\n};\n\nexport default useLocationService;","map":{"version":3,"sources":["E:/priv/github/plan-your-trip/src/Services/LocationService.js"],"names":["useLocationsState","LocationsStateActions","useNotificationService","useDbPersistenceService","useLocationService","dispatchLocations","notificationService","dbPersistentLocationService","setLoading","type","isLoading","data","clearLoading","add","location","addLocation","success","name","error","edit","editLocation","remove","removeLocation"],"mappings":"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","sourcesContent":["import { useLocationsState, LocationsStateActions } from '../State/LocationsState'\r\nimport useNotificationService from '../Services/NotificationService'\r\nimport useDbPersistenceService from './DbPersistentLocationService'\r\n\r\nconst useLocationService = () => {\r\n    const [{}, dispatchLocations] = useLocationsState();\r\n    const notificationService = useNotificationService();\r\n    const dbPersistentLocationService = useDbPersistenceService();\r\n\r\n    var setLoading = () => {\r\n        dispatchLocations({\r\n            type: LocationsStateActions.isLoading, \r\n            data: true});\r\n    }\r\n\r\n    var clearLoading = () => {\r\n        dispatchLocations({\r\n            type: LocationsStateActions.isLoading, \r\n            data: false});\r\n    }\r\n\r\n    var add = async (location) => {\r\n        setLoading();\r\n        try{\r\n            await dbPersistentLocationService.add(location)\r\n            dispatchLocations({\r\n                type: LocationsStateActions.addLocation, \r\n                data: location});\r\n            \r\n            notificationService.success(`New location added: ${location.name}`);\r\n        }\r\n        catch(e)\r\n        {\r\n            notificationService.error(`Error while adding location: ${location.name}`);\r\n        }\r\n        finally{\r\n            clearLoading();\r\n        }\r\n  \r\n    }\r\n\r\n    var edit = async (location) => {\r\n        setLoading();\r\n        try{\r\n            await dbPersistentLocationService.edit(location)\r\n            dispatchLocations({\r\n                type: LocationsStateActions.editLocation, \r\n                data: location})\r\n    \r\n            notificationService.success(`Location modified: ${location.name}`);\r\n        }\r\n        catch(e)\r\n        {\r\n            notificationService.error(`Error while editing location: ${location.name}`);\r\n        }\r\n        finally{\r\n            clearLoading();\r\n        }\r\n    }\r\n\r\n    var remove = async (location) => {\r\n        setLoading();\r\n        try{\r\n            await dbPersistentLocationService.remove(location)\r\n            dispatchLocations({\r\n                type: LocationsStateActions.removeLocation, \r\n                data: location})\r\n                \r\n            notificationService.success(`Location removed: ${location.name}`);\r\n        }\r\n        catch(e)\r\n        {\r\n            notificationService.error(`Error while removing location: ${location.name}`);\r\n        }\r\n        finally{\r\n            clearLoading();\r\n        }\r\n    }\r\n\r\n    return {\r\n        add: add, \r\n        edit: edit, \r\n        remove: remove}\r\n}\r\n\r\nexport default useLocationService;"]},"metadata":{},"sourceType":"module"}